24-08-29.16:24:04.119 [main            ] INFO  RaffleActivityPartakeServiceTest - Starting RaffleActivityPartakeServiceTest using Java 1.8.0_171 on LAPTOP-6UTBSJGB with PID 4892 (started by 27132 in C:\Users\27132\Java\big-market\big-market-app)
24-08-29.16:24:04.119 [main            ] INFO  RaffleActivityPartakeServiceTest - The following 1 profile is active: "dev"
24-08-29.16:24:05.760 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-08-29.16:24:05.768 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-08-29.16:24:05.860 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 67 ms. Found 0 Redis repository interfaces.
24-08-29.16:24:06.415 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'stringToNoneShardingStrategyConfigurationConverter' of type [org.apache.shardingsphere.spring.boot.converter.StringToNoneShardingStrategyConfigurationConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-08-29.16:24:06.433 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.shardingsphere-org.apache.shardingsphere.spring.boot.prop.SpringBootPropertiesConfiguration' of type [org.apache.shardingsphere.spring.boot.prop.SpringBootPropertiesConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-08-29.16:24:06.690 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.apache.shardingsphere.spring.boot.ShardingSphereAutoConfiguration' of type [org.apache.shardingsphere.spring.boot.ShardingSphereAutoConfiguration$$EnhancerBySpringCGLIB$$aab90848] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-08-29.16:24:07.842 [main            ] INFO  Version                - Redisson 3.23.4
24-08-29.16:24:31.437 [main            ] WARN  GenericWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'raffleController': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'strategyArmoryDispatchService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'strategyRepository': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redissonService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redissonClient' defined in class path resource [com/big/market/infrastructure/config/RedisClientConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redissonClient' threw exception; nested exception is org.redisson.client.RedisConnectionException: Unable to connect to Redis server: 8.138.41.137/8.138.41.137:16379
24-08-29.16:24:31.458 [main            ] INFO  ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
24-08-29.16:24:31.494 [main            ] ERROR SpringApplication      - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'raffleController': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'strategyArmoryDispatchService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'strategyRepository': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redissonService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redissonClient' defined in class path resource [com/big/market/infrastructure/config/RedisClientConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redissonClient' threw exception; nested exception is org.redisson.client.RedisConnectionException: Unable to connect to Redis server: 8.138.41.137/8.138.41.137:16379
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:920)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:136)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:141)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:90)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'strategyArmoryDispatchService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'strategyRepository': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redissonService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redissonClient' defined in class path resource [com/big/market/infrastructure/config/RedisClientConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redissonClient' threw exception; nested exception is org.redisson.client.RedisConnectionException: Unable to connect to Redis server: 8.138.41.137/8.138.41.137:16379
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:544)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:520)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:673)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:228)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:329)
	... 43 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'strategyRepository': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redissonService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redissonClient' defined in class path resource [com/big/market/infrastructure/config/RedisClientConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redissonClient' threw exception; nested exception is org.redisson.client.RedisConnectionException: Unable to connect to Redis server: 8.138.41.137/8.138.41.137:16379
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeanByName(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:550)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:520)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:673)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:228)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:329)
	... 59 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redissonService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redissonClient' defined in class path resource [com/big/market/infrastructure/config/RedisClientConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redissonClient' threw exception; nested exception is org.redisson.client.RedisConnectionException: Unable to connect to Redis server: 8.138.41.137/8.138.41.137:16379
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:544)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:520)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:673)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:228)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:329)
	... 73 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redissonClient' defined in class path resource [com/big/market/infrastructure/config/RedisClientConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redissonClient' threw exception; nested exception is org.redisson.client.RedisConnectionException: Unable to connect to Redis server: 8.138.41.137/8.138.41.137:16379
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeanByName(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:550)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:520)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:673)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:228)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:329)
	... 89 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redissonClient' threw exception; nested exception is org.redisson.client.RedisConnectionException: Unable to connect to Redis server: 8.138.41.137/8.138.41.137:16379
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 105 common frames omitted
Caused by: org.redisson.client.RedisConnectionException: Unable to connect to Redis server: 8.138.41.137/8.138.41.137:16379
	at org.redisson.connection.pool.ConnectionPool.lambda$createConnection$0(ConnectionPool.java:132)
	at java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:760)
	at java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:736)
	at java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:474)
	at java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:1977)
	at org.redisson.connection.pool.ConnectionPool.promiseFailure(ConnectionPool.java:294)
	at org.redisson.connection.pool.ConnectionPool.lambda$createConnection$6(ConnectionPool.java:253)
	at java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:760)
	at java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:736)
	at java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:474)
	at java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:1977)
	at org.redisson.client.RedisClient$1$2.run(RedisClient.java:257)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask$$$capture(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.util.concurrent.CompletionException: io.netty.channel.ConnectTimeoutException: connection timed out: 8.138.41.137/8.138.41.137:16379
	at java.util.concurrent.CompletableFuture.encodeRelay(CompletableFuture.java:326)
	at java.util.concurrent.CompletableFuture.completeRelay(CompletableFuture.java:338)
	at java.util.concurrent.CompletableFuture.uniRelay(CompletableFuture.java:911)
	at java.util.concurrent.CompletableFuture$UniRelay.tryFire(CompletableFuture.java:899)
	... 13 common frames omitted
Caused by: io.netty.channel.ConnectTimeoutException: connection timed out: 8.138.41.137/8.138.41.137:16379
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$1.run(AbstractNioChannel.java:261)
	at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98)
	at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:153)
	... 10 common frames omitted
24-08-29.16:24:31.502 [main            ] ERROR TestContextManager     - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@635572a7] to prepare test instance [com.big.market.infrastructure.domain.test.activity.RaffleActivityPartakeServiceTest@285c63cf]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:98)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'raffleController': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'strategyArmoryDispatchService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'strategyRepository': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redissonService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redissonClient' defined in class path resource [com/big/market/infrastructure/config/RedisClientConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redissonClient' threw exception; nested exception is org.redisson.client.RedisConnectionException: Unable to connect to Redis server: 8.138.41.137/8.138.41.137:16379
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:920)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:136)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:141)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:90)
	... 27 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'strategyArmoryDispatchService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'strategyRepository': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redissonService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redissonClient' defined in class path resource [com/big/market/infrastructure/config/RedisClientConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redissonClient' threw exception; nested exception is org.redisson.client.RedisConnectionException: Unable to connect to Redis server: 8.138.41.137/8.138.41.137:16379
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:544)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:520)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:673)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:228)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:329)
	... 43 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'strategyRepository': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redissonService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redissonClient' defined in class path resource [com/big/market/infrastructure/config/RedisClientConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redissonClient' threw exception; nested exception is org.redisson.client.RedisConnectionException: Unable to connect to Redis server: 8.138.41.137/8.138.41.137:16379
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeanByName(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:550)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:520)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:673)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:228)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:329)
	... 59 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redissonService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redissonClient' defined in class path resource [com/big/market/infrastructure/config/RedisClientConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redissonClient' threw exception; nested exception is org.redisson.client.RedisConnectionException: Unable to connect to Redis server: 8.138.41.137/8.138.41.137:16379
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:544)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:520)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:673)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:228)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:329)
	... 73 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redissonClient' defined in class path resource [com/big/market/infrastructure/config/RedisClientConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redissonClient' threw exception; nested exception is org.redisson.client.RedisConnectionException: Unable to connect to Redis server: 8.138.41.137/8.138.41.137:16379
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeanByName(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:550)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:520)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:673)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:228)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:329)
	... 89 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redissonClient' threw exception; nested exception is org.redisson.client.RedisConnectionException: Unable to connect to Redis server: 8.138.41.137/8.138.41.137:16379
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 105 common frames omitted
Caused by: org.redisson.client.RedisConnectionException: Unable to connect to Redis server: 8.138.41.137/8.138.41.137:16379
	at org.redisson.connection.pool.ConnectionPool.lambda$createConnection$0(ConnectionPool.java:132)
	at java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:760)
	at java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:736)
	at java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:474)
	at java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:1977)
	at org.redisson.connection.pool.ConnectionPool.promiseFailure(ConnectionPool.java:294)
	at org.redisson.connection.pool.ConnectionPool.lambda$createConnection$6(ConnectionPool.java:253)
	at java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:760)
	at java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:736)
	at java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:474)
	at java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:1977)
	at org.redisson.client.RedisClient$1$2.run(RedisClient.java:257)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask$$$capture(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.util.concurrent.CompletionException: io.netty.channel.ConnectTimeoutException: connection timed out: 8.138.41.137/8.138.41.137:16379
	at java.util.concurrent.CompletableFuture.encodeRelay(CompletableFuture.java:326)
	at java.util.concurrent.CompletableFuture.completeRelay(CompletableFuture.java:338)
	at java.util.concurrent.CompletableFuture.uniRelay(CompletableFuture.java:911)
	at java.util.concurrent.CompletableFuture$UniRelay.tryFire(CompletableFuture.java:899)
	... 13 common frames omitted
Caused by: io.netty.channel.ConnectTimeoutException: connection timed out: 8.138.41.137/8.138.41.137:16379
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$1.run(AbstractNioChannel.java:261)
	at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98)
	at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:153)
	... 10 common frames omitted
24-08-29.16:29:03.086 [main            ] INFO  RaffleActivityPartakeServiceTest - Starting RaffleActivityPartakeServiceTest using Java 1.8.0_171 on LAPTOP-6UTBSJGB with PID 28800 (started by 27132 in C:\Users\27132\Java\big-market\big-market-app)
24-08-29.16:29:03.087 [main            ] INFO  RaffleActivityPartakeServiceTest - The following 1 profile is active: "dev"
24-08-29.16:29:04.846 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-08-29.16:29:04.857 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-08-29.16:29:04.966 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 69 ms. Found 0 Redis repository interfaces.
24-08-29.16:29:05.538 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'stringToNoneShardingStrategyConfigurationConverter' of type [org.apache.shardingsphere.spring.boot.converter.StringToNoneShardingStrategyConfigurationConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-08-29.16:29:05.553 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.shardingsphere-org.apache.shardingsphere.spring.boot.prop.SpringBootPropertiesConfiguration' of type [org.apache.shardingsphere.spring.boot.prop.SpringBootPropertiesConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-08-29.16:29:05.824 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.apache.shardingsphere.spring.boot.ShardingSphereAutoConfiguration' of type [org.apache.shardingsphere.spring.boot.ShardingSphereAutoConfiguration$$EnhancerBySpringCGLIB$$a2891204] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-08-29.16:29:07.145 [main            ] INFO  Version                - Redisson 3.23.4
24-08-29.16:29:07.764 [redisson-netty-2-6] INFO  MasterPubSubConnectionPool - 1 connections initialized for 8.138.41.137/8.138.41.137:16379
24-08-29.16:29:08.125 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 8.138.41.137/8.138.41.137:16379
24-08-29.16:29:08.513 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-08-29.16:29:09.908 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-08-29.16:29:09.922 [main            ] INFO  HikariDataSource       - HikariPool-2 - Starting...
24-08-29.16:29:10.665 [main            ] INFO  HikariDataSource       - HikariPool-2 - Start completed.
24-08-29.16:29:15.638 [main            ] INFO  StdSchedulerFactory    - Using default implementation for ThreadExecutor
24-08-29.16:29:15.658 [main            ] INFO  SchedulerSignalerImpl  - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
24-08-29.16:29:15.658 [main            ] INFO  QuartzScheduler        - Quartz Scheduler v.2.3.2 created.
24-08-29.16:29:15.659 [main            ] INFO  RAMJobStore            - RAMJobStore initialized.
24-08-29.16:29:15.660 [main            ] INFO  QuartzScheduler        - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

24-08-29.16:29:15.660 [main            ] INFO  StdSchedulerFactory    - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
24-08-29.16:29:15.660 [main            ] INFO  StdSchedulerFactory    - Quartz scheduler version: 2.3.2
24-08-29.16:29:15.660 [main            ] INFO  QuartzScheduler        - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@2aee0173
24-08-29.16:29:15.824 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-08-29.16:29:15.951 [main            ] INFO  CachingConnectionFactory - Attempting to connect to: [8.138.41.137:5672]
24-08-29.16:29:16.253 [main            ] INFO  CachingConnectionFactory - Created new connection: rabbitConnectionFactory#1ef4179:0/SimpleConnection@7cc742d [delegate=amqp://admin@8.138.41.137:5672/, localPort= 55176]
24-08-29.16:29:16.946 [main            ] INFO  SchedulerFactoryBean   - Starting Quartz Scheduler now
24-08-29.16:29:16.946 [main            ] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED started.
24-08-29.16:29:16.965 [main            ] INFO  RaffleActivityPartakeServiceTest - Started RaffleActivityPartakeServiceTest in 14.395 seconds (JVM running for 15.623)
24-08-29.16:29:25.457 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:29:25.535 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:29:26.512 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:29:26.512 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@2aaabbd7], lock=Optional.empty, window=Optional.empty)
24-08-29.16:29:26.512 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:29:26.512 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:29:27.046 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: select activity_name,
               strategy_id,
               order_id,
               order_time,
               order_state
        from user_raffle_order where activity_id = ? and user_id = ? and order_state = 'create'
24-08-29.16:29:27.046 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional.empty, lock=Optional.empty, window=Optional.empty)
24-08-29.16:29:27.046 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select activity_name,
               strategy_id,
               order_id,
               order_time,
               order_state
        from user_raffle_order_0 where activity_id = ? and user_id = ? and order_state = 'create' ::: [101, lyt]
24-08-29.16:29:30.121 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:29:30.177 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:29:30.179 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:29:30.179 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@2aaabbd7], lock=Optional.empty, window=Optional.empty)
24-08-29.16:29:30.179 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:29:30.179 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:29:30.183 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] INFO  SimpleMessageListenerContainer - Waiting for workers to finish.
24-08-29.16:29:30.225 [SpringApplicationShutdownHook] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
24-08-29.16:29:30.225 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] INFO  SimpleMessageListenerContainer - Waiting for workers to finish.
24-08-29.16:29:31.172 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] INFO  SimpleMessageListenerContainer - Successfully waited for workers to finish.
24-08-29.16:29:31.177 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] INFO  SimpleMessageListenerContainer - Successfully waited for workers to finish.
24-08-29.16:29:31.179 [SpringApplicationShutdownHook] INFO  SchedulerFactoryBean   - Shutting down Quartz Scheduler
24-08-29.16:29:31.179 [SpringApplicationShutdownHook] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
24-08-29.16:29:31.179 [SpringApplicationShutdownHook] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
24-08-29.16:29:31.179 [SpringApplicationShutdownHook] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
24-08-29.16:29:31.180 [SpringApplicationShutdownHook] INFO  SimpleMessageListenerContainer - Shutdown ignored - container is already stopped
24-08-29.16:29:31.181 [SpringApplicationShutdownHook] INFO  SimpleMessageListenerContainer - Shutdown ignored - container is already stopped
24-08-29.16:29:31.234 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-08-29.16:29:31.243 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-08-29.16:29:31.243 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-2 - Shutdown initiated...
24-08-29.16:29:31.250 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-2 - Shutdown completed.
24-08-29.16:29:48.935 [main            ] INFO  RaffleActivityPartakeServiceTest - Starting RaffleActivityPartakeServiceTest using Java 1.8.0_171 on LAPTOP-6UTBSJGB with PID 24816 (started by 27132 in C:\Users\27132\Java\big-market\big-market-app)
24-08-29.16:29:48.936 [main            ] INFO  RaffleActivityPartakeServiceTest - The following 1 profile is active: "dev"
24-08-29.16:29:50.538 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-08-29.16:29:50.545 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-08-29.16:29:50.621 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 54 ms. Found 0 Redis repository interfaces.
24-08-29.16:29:51.167 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'stringToNoneShardingStrategyConfigurationConverter' of type [org.apache.shardingsphere.spring.boot.converter.StringToNoneShardingStrategyConfigurationConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-08-29.16:29:51.184 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.shardingsphere-org.apache.shardingsphere.spring.boot.prop.SpringBootPropertiesConfiguration' of type [org.apache.shardingsphere.spring.boot.prop.SpringBootPropertiesConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-08-29.16:29:51.452 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.apache.shardingsphere.spring.boot.ShardingSphereAutoConfiguration' of type [org.apache.shardingsphere.spring.boot.ShardingSphereAutoConfiguration$$EnhancerBySpringCGLIB$$7d24074] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-08-29.16:29:52.697 [main            ] INFO  Version                - Redisson 3.23.4
24-08-29.16:29:53.299 [redisson-netty-2-4] INFO  MasterPubSubConnectionPool - 1 connections initialized for 8.138.41.137/8.138.41.137:16379
24-08-29.16:29:53.871 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 8.138.41.137/8.138.41.137:16379
24-08-29.16:29:54.281 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-08-29.16:29:55.734 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-08-29.16:29:55.750 [main            ] INFO  HikariDataSource       - HikariPool-2 - Starting...
24-08-29.16:29:56.497 [main            ] INFO  HikariDataSource       - HikariPool-2 - Start completed.
24-08-29.16:30:01.270 [main            ] INFO  StdSchedulerFactory    - Using default implementation for ThreadExecutor
24-08-29.16:30:01.283 [main            ] INFO  SchedulerSignalerImpl  - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
24-08-29.16:30:01.283 [main            ] INFO  QuartzScheduler        - Quartz Scheduler v.2.3.2 created.
24-08-29.16:30:01.285 [main            ] INFO  RAMJobStore            - RAMJobStore initialized.
24-08-29.16:30:01.286 [main            ] INFO  QuartzScheduler        - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

24-08-29.16:30:01.286 [main            ] INFO  StdSchedulerFactory    - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
24-08-29.16:30:01.286 [main            ] INFO  StdSchedulerFactory    - Quartz scheduler version: 2.3.2
24-08-29.16:30:01.286 [main            ] INFO  QuartzScheduler        - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@3f3b0b19
24-08-29.16:30:01.438 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-08-29.16:30:01.567 [main            ] INFO  CachingConnectionFactory - Attempting to connect to: [8.138.41.137:5672]
24-08-29.16:30:01.960 [main            ] INFO  CachingConnectionFactory - Created new connection: rabbitConnectionFactory#1a819769:0/SimpleConnection@14484887 [delegate=amqp://admin@8.138.41.137:5672/, localPort= 55281]
24-08-29.16:30:02.643 [main            ] INFO  SchedulerFactoryBean   - Starting Quartz Scheduler now
24-08-29.16:30:02.643 [main            ] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED started.
24-08-29.16:30:02.661 [main            ] INFO  RaffleActivityPartakeServiceTest - Started RaffleActivityPartakeServiceTest in 14.228 seconds (JVM running for 15.523)
24-08-29.16:30:07.366 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:30:08.123 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:30:13.578 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:30:13.670 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:30:14.459 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:30:14.459 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:30:14.459 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@3019423e], lock=Optional.empty, window=Optional.empty)
24-08-29.16:30:14.459 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@3019423e], lock=Optional.empty, window=Optional.empty)
24-08-29.16:30:14.459 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:30:14.459 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:30:14.459 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:30:14.459 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:30:15.000 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: select activity_name,
               strategy_id,
               order_id,
               order_time,
               order_state
        from user_raffle_order where activity_id = ? and user_id = ? and order_state = 'create'
24-08-29.16:30:15.001 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional.empty, lock=Optional.empty, window=Optional.empty)
24-08-29.16:30:15.001 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select activity_name,
               strategy_id,
               order_id,
               order_time,
               order_state
        from user_raffle_order_0 where activity_id = ? and user_id = ? and order_state = 'create' ::: [101, lyt]
24-08-29.16:30:15.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:30:15.056 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:31:50.252 [HikariPool-2 housekeeper] WARN  HikariPool             - HikariPool-2 - Thread starvation or clock leap detected (housekeeper delta=1m53s651ms940µs300ns).
24-08-29.16:31:50.252 [HikariPool-1 housekeeper] WARN  HikariPool             - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m54s417ms202µs700ns).
24-08-29.16:31:50.255 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:31:50.257 [pool-7-thread-3 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:31:50.257 [pool-7-thread-3 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@3019423e], lock=Optional.empty, window=Optional.empty)
24-08-29.16:31:50.257 [pool-7-thread-3 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:31:50.257 [pool-7-thread-3 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:31:50.333 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] INFO  SimpleMessageListenerContainer - Waiting for workers to finish.
24-08-29.16:31:50.388 [SpringApplicationShutdownHook] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
24-08-29.16:31:50.388 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] INFO  SimpleMessageListenerContainer - Waiting for workers to finish.
24-08-29.16:31:51.316 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] INFO  SimpleMessageListenerContainer - Successfully waited for workers to finish.
24-08-29.16:31:51.316 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] INFO  SimpleMessageListenerContainer - Successfully waited for workers to finish.
24-08-29.16:31:51.320 [SpringApplicationShutdownHook] INFO  SchedulerFactoryBean   - Shutting down Quartz Scheduler
24-08-29.16:31:51.320 [SpringApplicationShutdownHook] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
24-08-29.16:31:51.321 [SpringApplicationShutdownHook] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
24-08-29.16:31:51.321 [SpringApplicationShutdownHook] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
24-08-29.16:31:51.323 [SpringApplicationShutdownHook] INFO  SimpleMessageListenerContainer - Shutdown ignored - container is already stopped
24-08-29.16:31:51.323 [SpringApplicationShutdownHook] INFO  SimpleMessageListenerContainer - Shutdown ignored - container is already stopped
24-08-29.16:31:51.378 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-08-29.16:31:51.385 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-08-29.16:31:51.385 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-2 - Shutdown initiated...
24-08-29.16:31:51.392 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-2 - Shutdown completed.
24-08-29.16:31:58.000 [main            ] INFO  RaffleActivityPartakeServiceTest - Starting RaffleActivityPartakeServiceTest using Java 1.8.0_171 on LAPTOP-6UTBSJGB with PID 28692 (started by 27132 in C:\Users\27132\Java\big-market\big-market-app)
24-08-29.16:31:58.001 [main            ] INFO  RaffleActivityPartakeServiceTest - The following 1 profile is active: "dev"
24-08-29.16:31:59.570 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-08-29.16:31:59.575 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-08-29.16:31:59.649 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 50 ms. Found 0 Redis repository interfaces.
24-08-29.16:32:00.200 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'stringToNoneShardingStrategyConfigurationConverter' of type [org.apache.shardingsphere.spring.boot.converter.StringToNoneShardingStrategyConfigurationConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-08-29.16:32:00.215 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.shardingsphere-org.apache.shardingsphere.spring.boot.prop.SpringBootPropertiesConfiguration' of type [org.apache.shardingsphere.spring.boot.prop.SpringBootPropertiesConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-08-29.16:32:00.482 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.apache.shardingsphere.spring.boot.ShardingSphereAutoConfiguration' of type [org.apache.shardingsphere.spring.boot.ShardingSphereAutoConfiguration$$EnhancerBySpringCGLIB$$65b678bd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-08-29.16:32:01.629 [main            ] INFO  Version                - Redisson 3.23.4
24-08-29.16:32:02.231 [redisson-netty-2-6] INFO  MasterPubSubConnectionPool - 1 connections initialized for 8.138.41.137/8.138.41.137:16379
24-08-29.16:32:02.661 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 8.138.41.137/8.138.41.137:16379
24-08-29.16:32:03.067 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-08-29.16:32:04.448 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-08-29.16:32:04.461 [main            ] INFO  HikariDataSource       - HikariPool-2 - Starting...
24-08-29.16:32:05.138 [main            ] INFO  HikariDataSource       - HikariPool-2 - Start completed.
24-08-29.16:32:09.839 [main            ] INFO  StdSchedulerFactory    - Using default implementation for ThreadExecutor
24-08-29.16:32:09.852 [main            ] INFO  SchedulerSignalerImpl  - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
24-08-29.16:32:09.852 [main            ] INFO  QuartzScheduler        - Quartz Scheduler v.2.3.2 created.
24-08-29.16:32:09.853 [main            ] INFO  RAMJobStore            - RAMJobStore initialized.
24-08-29.16:32:09.853 [main            ] INFO  QuartzScheduler        - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

24-08-29.16:32:09.853 [main            ] INFO  StdSchedulerFactory    - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
24-08-29.16:32:09.853 [main            ] INFO  StdSchedulerFactory    - Quartz scheduler version: 2.3.2
24-08-29.16:32:09.853 [main            ] INFO  QuartzScheduler        - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@18b77ec9
24-08-29.16:32:09.998 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-08-29.16:32:10.110 [main            ] INFO  CachingConnectionFactory - Attempting to connect to: [8.138.41.137:5672]
24-08-29.16:32:10.456 [main            ] INFO  CachingConnectionFactory - Created new connection: rabbitConnectionFactory#4756c8f3:0/SimpleConnection@7be29ac4 [delegate=amqp://admin@8.138.41.137:5672/, localPort= 55424]
24-08-29.16:32:11.043 [main            ] INFO  SchedulerFactoryBean   - Starting Quartz Scheduler now
24-08-29.16:32:11.043 [main            ] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED started.
24-08-29.16:32:11.059 [main            ] INFO  RaffleActivityPartakeServiceTest - Started RaffleActivityPartakeServiceTest in 13.555 seconds (JVM running for 14.858)
24-08-29.16:32:15.078 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:32:15.192 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:32:17.457 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:32:17.457 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@3931be68], lock=Optional.empty, window=Optional.empty)
24-08-29.16:32:17.458 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:32:17.458 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:32:17.998 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: select activity_name,
               strategy_id,
               order_id,
               order_time,
               order_state
        from user_raffle_order where activity_id = ? and user_id = ? and order_state = 'create'
24-08-29.16:32:17.999 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional.empty, lock=Optional.empty, window=Optional.empty)
24-08-29.16:32:17.999 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select activity_name,
               strategy_id,
               order_id,
               order_time,
               order_state
        from user_raffle_order_0 where activity_id = ? and user_id = ? and order_state = 'create' ::: [101, lyt]
24-08-29.16:32:21.153 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:32:21.783 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:32:21.789 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:32:21.789 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@3931be68], lock=Optional.empty, window=Optional.empty)
24-08-29.16:32:21.789 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:32:21.790 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:32:22.647 [main            ] INFO  AbstractRaffleActivityPartake - 创建参与活动【已存在未消费】userId:lyt activityId:101 userRaffleEntity:{"activityName":"测试","orderId":"182735359748","orderState":"create","orderTime":"2024-08-24 22:33:41","strategyId":100004,"userId":"lyt"}
24-08-29.16:32:33.804 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:32:37.038 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:32:37.040 [pool-7-thread-3 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:32:37.040 [pool-7-thread-3 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@3931be68], lock=Optional.empty, window=Optional.empty)
24-08-29.16:32:37.040 [pool-7-thread-3 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:32:37.040 [pool-7-thread-3 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:32:37.043 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: select total_count,
               total_count_surplus,
               day_count,
               day_count_surplus,
               month_count,
               month_count_surplus
        from raffle_activity_account where user_id = ? and activity_id = ?
24-08-29.16:32:37.043 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional.empty, lock=Optional.empty, window=Optional.empty)
24-08-29.16:32:37.044 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select total_count,
               total_count_surplus,
               day_count,
               day_count_surplus,
               month_count,
               month_count_surplus
        from raffle_activity_account_0 where user_id = ? and activity_id = ? ::: [lyt, 101]
24-08-29.16:32:44.493 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:32:46.763 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: select user_id,
               activity_id,
               `month`,
               month_count,
               month_count_surplus
        from raffle_activity_account_month
        where user_id = ?
          and activity_id = ?
          and `month` = ?;
24-08-29.16:32:46.764 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional.empty, lock=Optional.empty, window=Optional.empty)
24-08-29.16:32:46.764 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select user_id,
               activity_id,
               `month`,
               month_count,
               month_count_surplus
        from raffle_activity_account_month_0
        where user_id = ?
          and activity_id = ?
          and `month` = ?; ::: [lyt, 101, 2024-08]
24-08-29.16:32:46.766 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:32:46.767 [pool-7-thread-4 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:32:46.767 [pool-7-thread-4 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@3931be68], lock=Optional.empty, window=Optional.empty)
24-08-29.16:32:46.767 [pool-7-thread-4 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:32:46.767 [pool-7-thread-4 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:33:03.701 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:33:07.173 [pool-7-thread-5 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:33:07.173 [pool-7-thread-5 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@3931be68], lock=Optional.empty, window=Optional.empty)
24-08-29.16:33:07.173 [pool-7-thread-5 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:33:07.174 [pool-7-thread-5 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:33:07.229 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:33:07.233 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: select user_id,
               activity_id,
               `day`,
               day_count,
               day_count_surplus
        from raffle_activity_account_day
        where user_id = ?
          and activity_id = ?
          and `day` = ?;
24-08-29.16:33:07.233 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional.empty, lock=Optional.empty, window=Optional.empty)
24-08-29.16:33:07.235 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select user_id,
               activity_id,
               `day`,
               day_count,
               day_count_surplus
        from raffle_activity_account_day_0
        where user_id = ?
          and activity_id = ?
          and `day` = ?; ::: [lyt, 101, 2024-08-29]
24-08-29.16:33:07.275 [pool-7-thread-6 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:33:07.275 [pool-7-thread-6 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@3931be68], lock=Optional.empty, window=Optional.empty)
24-08-29.16:33:07.275 [pool-7-thread-6 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:33:07.275 [pool-7-thread-6 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:33:10.874 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:33:28.871 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:33:49.065 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:33:57.301 [pool-7-thread-7 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:34:03.975 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:34:03.975 [pool-7-thread-7 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@3931be68], lock=Optional.empty, window=Optional.empty)
24-08-29.16:34:03.975 [pool-7-thread-7 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:34:03.975 [pool-7-thread-7 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:34:04.055 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:34:06.248 [pool-7-thread-8 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:34:06.248 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:34:06.249 [pool-7-thread-8 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@3931be68], lock=Optional.empty, window=Optional.empty)
24-08-29.16:34:06.790 [pool-7-thread-8 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:34:06.791 [pool-7-thread-8 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:34:07.292 [pool-7-thread-9 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:34:07.292 [pool-7-thread-9 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@3931be68], lock=Optional.empty, window=Optional.empty)
24-08-29.16:34:07.292 [pool-7-thread-9 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:34:07.292 [pool-7-thread-9 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:34:07.471 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907504296
24-08-29.16:34:16.308 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:34:19.749 [pool-7-thread-10] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:34:20.102 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:34:20.102 [pool-7-thread-10] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@3931be68], lock=Optional.empty, window=Optional.empty)
24-08-29.16:34:20.469 [pool-7-thread-10] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:34:20.469 [pool-7-thread-10] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:34:21.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:34:21.009 [pool-7-thread-11] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:34:21.010 [pool-7-thread-11] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@3931be68], lock=Optional.empty, window=Optional.empty)
24-08-29.16:34:21.010 [pool-7-thread-11] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:34:21.010 [pool-7-thread-11] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:34:21.135 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: update raffle_activity_account set total_count_surplus = total_count_surplus - 1,
                                           day_count_surplus = day_count_surplus - 1,
                                           month_count_surplus = month_count_surplus - 1, update_time = now()
        where user_id = ? and activity_id = ?
        and total_count_surplus > 0 and day_count_surplus > 0 and month_count_surplus > 0;
24-08-29.16:34:21.135 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:34:21.135 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update raffle_activity_account_0 set total_count_surplus = total_count_surplus - 1,
                                           day_count_surplus = day_count_surplus - 1,
                                           month_count_surplus = month_count_surplus - 1, update_time = now()
        where user_id = ? and activity_id = ?
        and total_count_surplus > 0 and day_count_surplus > 0 and month_count_surplus > 0; ::: [lyt, 101]
24-08-29.16:34:21.335 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: update raffle_activity_account_month
        set month_count_surplus = month_count_surplus - 1,update_time = now()
        where user_id = ? and activity_id = ?
        and `month` = ? and month_count_surplus > 0
24-08-29.16:34:21.335 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:34:21.336 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update raffle_activity_account_month_0
        set month_count_surplus = month_count_surplus - 1,update_time = now()
        where user_id = ? and activity_id = ?
        and `month` = ? and month_count_surplus > 0 ::: [lyt, 101, 2024-08]
24-08-29.16:34:21.555 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into raffle_activity_account_day(
            user_id, activity_id, day, day_count, day_count_surplus, create_time, update_time)
        values
            (?, ?, ?, ?, ?, now(), now())
24-08-29.16:34:21.555 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:34:21.555 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into raffle_activity_account_day_0(
            user_id, activity_id, day, day_count, day_count_surplus, create_time, update_time, id)
        values
            (?, ?, ?, ?, ?, now(), now(), ?) ::: [lyt, 101, 2024-08-29, 20, 17, 1035954758546337792]
24-08-29.16:34:21.726 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: update raffle_activity_account
        set day_count_surplus = ?, update_time = now()
        where user_id = ? and activity_id = ?
24-08-29.16:34:21.726 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:34:21.727 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update raffle_activity_account_0
        set day_count_surplus = ?, update_time = now()
        where user_id = ? and activity_id = ? ::: [17, lyt, 101]
24-08-29.16:34:21.858 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_raffle_order(
            user_id, activity_id, activity_name, strategy_id, order_id, order_time, order_state, create_time, update_time
        )
        values(
                  ?, ?, ?, ?, ?, ?, ?, now(), now()
              )
24-08-29.16:34:21.858 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:34:21.858 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_raffle_order_0(
            user_id, activity_id, activity_name, strategy_id, order_id, order_time, order_state, create_time, update_time
        , id)
        values(?, ?, ?, ?, ?, ?, ?, now(), now(), ?) ::: [lyt, 101, 测试, 100004, 182907504296, 2024-08-29 16:32:14.859, create, 1035954759846572033]
24-08-29.16:34:28.873 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:34:30.717 [main            ] INFO  RaffleActivityPartakeServiceTest - 请求参数：{"activityId":101,"userId":"lyt"}
24-08-29.16:34:30.717 [main            ] INFO  RaffleActivityPartakeServiceTest - 测试结果：{"activityId":101,"activityName":"测试","orderId":"182907504296","orderState":"create","orderTime":"2024-08-29 16:32:14.859","strategyId":100004,"userId":"lyt"}
24-08-29.16:34:30.772 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:34:30.773 [pool-7-thread-12] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:34:30.773 [pool-7-thread-12] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@3931be68], lock=Optional.empty, window=Optional.empty)
24-08-29.16:34:30.773 [pool-7-thread-12] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:34:30.773 [pool-7-thread-12] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:34:35.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:34:35.083 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:34:35.085 [pool-7-thread-13] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:34:35.085 [pool-7-thread-13] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@3931be68], lock=Optional.empty, window=Optional.empty)
24-08-29.16:34:35.085 [pool-7-thread-13] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:34:35.085 [pool-7-thread-13] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:34:40.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:34:40.067 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:34:40.119 [pool-7-thread-14] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:34:40.119 [pool-7-thread-14] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@3931be68], lock=Optional.empty, window=Optional.empty)
24-08-29.16:34:40.119 [pool-7-thread-14] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:34:40.119 [pool-7-thread-14] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:34:45.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:34:45.051 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:34:45.099 [pool-7-thread-15] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:34:45.099 [pool-7-thread-15] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@3931be68], lock=Optional.empty, window=Optional.empty)
24-08-29.16:34:45.099 [pool-7-thread-15] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:34:45.099 [pool-7-thread-15] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:34:50.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:34:50.058 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:34:50.059 [pool-7-thread-16] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:34:50.059 [pool-7-thread-16] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@3931be68], lock=Optional.empty, window=Optional.empty)
24-08-29.16:34:50.059 [pool-7-thread-16] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:34:50.059 [pool-7-thread-16] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:34:55.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:34:55.007 [pool-7-thread-17] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:34:55.007 [pool-7-thread-17] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@3931be68], lock=Optional.empty, window=Optional.empty)
24-08-29.16:34:55.007 [pool-7-thread-17] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:34:55.007 [pool-7-thread-17] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:34:55.067 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:35:00.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:35:00.103 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:35:00.105 [pool-7-thread-18] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:35:00.105 [pool-7-thread-18] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@3931be68], lock=Optional.empty, window=Optional.empty)
24-08-29.16:35:00.105 [pool-7-thread-18] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:35:00.105 [pool-7-thread-18] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:35:05.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:35:05.068 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:35:05.117 [pool-7-thread-19] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:35:05.117 [pool-7-thread-19] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@3931be68], lock=Optional.empty, window=Optional.empty)
24-08-29.16:35:05.117 [pool-7-thread-19] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:35:05.117 [pool-7-thread-19] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:35:10.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:35:10.080 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:35:10.128 [pool-7-thread-20] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:35:10.128 [pool-7-thread-20] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@3931be68], lock=Optional.empty, window=Optional.empty)
24-08-29.16:35:10.128 [pool-7-thread-20] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:35:10.128 [pool-7-thread-20] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:35:15.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:35:15.081 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:35:15.137 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:35:15.137 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@3931be68], lock=Optional.empty, window=Optional.empty)
24-08-29.16:35:15.138 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:35:15.138 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:35:20.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:35:20.004 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:35:20.004 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@3931be68], lock=Optional.empty, window=Optional.empty)
24-08-29.16:35:20.004 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:35:20.004 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:35:20.057 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:35:25.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:35:25.049 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:35:25.050 [pool-7-thread-3 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:35:25.050 [pool-7-thread-3 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@3931be68], lock=Optional.empty, window=Optional.empty)
24-08-29.16:35:25.050 [pool-7-thread-3 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:35:25.050 [pool-7-thread-3 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:35:30.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:35:30.060 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:35:30.061 [pool-7-thread-4 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:35:30.061 [pool-7-thread-4 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@3931be68], lock=Optional.empty, window=Optional.empty)
24-08-29.16:35:30.061 [pool-7-thread-4 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:35:30.061 [pool-7-thread-4 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:35:35.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:35:35.071 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:35:35.073 [pool-7-thread-5 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:35:35.073 [pool-7-thread-5 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@3931be68], lock=Optional.empty, window=Optional.empty)
24-08-29.16:35:35.073 [pool-7-thread-5 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:35:35.073 [pool-7-thread-5 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:35:40.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:35:40.085 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:35:40.131 [pool-7-thread-6 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:35:40.131 [pool-7-thread-6 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@3931be68], lock=Optional.empty, window=Optional.empty)
24-08-29.16:35:40.132 [pool-7-thread-6 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:35:40.132 [pool-7-thread-6 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:35:45.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:35:45.056 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:35:45.056 [pool-7-thread-7 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:35:45.056 [pool-7-thread-7 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@3931be68], lock=Optional.empty, window=Optional.empty)
24-08-29.16:35:45.056 [pool-7-thread-7 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:35:45.056 [pool-7-thread-7 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:35:50.000 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:35:50.057 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:35:50.058 [pool-7-thread-8 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:35:50.058 [pool-7-thread-8 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@3931be68], lock=Optional.empty, window=Optional.empty)
24-08-29.16:35:50.058 [pool-7-thread-8 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:35:50.058 [pool-7-thread-8 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:35:55.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:35:55.089 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:35:55.090 [pool-7-thread-9 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:35:55.091 [pool-7-thread-9 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@3931be68], lock=Optional.empty, window=Optional.empty)
24-08-29.16:35:55.091 [pool-7-thread-9 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:35:55.091 [pool-7-thread-9 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:36:00.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:36:00.079 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:36:00.080 [pool-7-thread-10] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:36:00.080 [pool-7-thread-10] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@3931be68], lock=Optional.empty, window=Optional.empty)
24-08-29.16:36:00.080 [pool-7-thread-10] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:36:00.080 [pool-7-thread-10] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:36:05.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:36:05.055 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:36:05.056 [pool-7-thread-11] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:36:05.056 [pool-7-thread-11] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@3931be68], lock=Optional.empty, window=Optional.empty)
24-08-29.16:36:05.056 [pool-7-thread-11] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:36:05.056 [pool-7-thread-11] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:36:10.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:36:10.065 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:36:10.162 [pool-7-thread-12] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:36:10.163 [pool-7-thread-12] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@3931be68], lock=Optional.empty, window=Optional.empty)
24-08-29.16:36:10.163 [pool-7-thread-12] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:36:10.165 [pool-7-thread-12] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:36:15.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:36:20.636 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:36:20.637 [pool-7-thread-13] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:36:20.637 [pool-7-thread-13] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@3931be68], lock=Optional.empty, window=Optional.empty)
24-08-29.16:36:20.637 [pool-7-thread-13] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:36:20.637 [pool-7-thread-13] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:36:20.728 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:36:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:36:25.055 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:36:29.820 [pool-7-thread-14] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:36:29.821 [pool-7-thread-14] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@3931be68], lock=Optional.empty, window=Optional.empty)
24-08-29.16:36:29.821 [pool-7-thread-14] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:36:29.821 [pool-7-thread-14] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:36:30.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:36:48.810 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:36:54.478 [pool-7-thread-15] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:36:54.478 [pool-7-thread-15] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@3931be68], lock=Optional.empty, window=Optional.empty)
24-08-29.16:36:54.478 [pool-7-thread-15] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:36:54.478 [pool-7-thread-15] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:36:54.536 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:36:57.192 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:36:57.193 [pool-7-thread-16] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:36:57.193 [pool-7-thread-16] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@3931be68], lock=Optional.empty, window=Optional.empty)
24-08-29.16:36:57.193 [pool-7-thread-16] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:36:57.193 [pool-7-thread-16] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:36:57.250 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:36:57.251 [pool-7-thread-17] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:36:57.251 [pool-7-thread-17] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@3931be68], lock=Optional.empty, window=Optional.empty)
24-08-29.16:36:57.251 [pool-7-thread-17] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:36:57.251 [pool-7-thread-17] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:37:00.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:37:00.085 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:37:00.137 [pool-7-thread-18] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:37:00.137 [pool-7-thread-18] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@3931be68], lock=Optional.empty, window=Optional.empty)
24-08-29.16:37:00.137 [pool-7-thread-18] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:37:00.137 [pool-7-thread-18] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:37:05.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:37:05.058 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:37:05.059 [pool-7-thread-19] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:37:05.059 [pool-7-thread-19] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@3931be68], lock=Optional.empty, window=Optional.empty)
24-08-29.16:37:05.059 [pool-7-thread-19] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:37:05.059 [pool-7-thread-19] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:37:10.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:37:10.071 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:37:10.072 [pool-7-thread-20] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:37:10.072 [pool-7-thread-20] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@3931be68], lock=Optional.empty, window=Optional.empty)
24-08-29.16:37:10.072 [pool-7-thread-20] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:37:10.072 [pool-7-thread-20] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:37:11.200 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] INFO  SimpleMessageListenerContainer - Waiting for workers to finish.
24-08-29.16:37:11.286 [SpringApplicationShutdownHook] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
24-08-29.16:37:11.286 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] INFO  SimpleMessageListenerContainer - Waiting for workers to finish.
24-08-29.16:37:11.387 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] INFO  SimpleMessageListenerContainer - Successfully waited for workers to finish.
24-08-29.16:37:11.387 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] INFO  SimpleMessageListenerContainer - Successfully waited for workers to finish.
24-08-29.16:37:11.389 [SpringApplicationShutdownHook] INFO  SchedulerFactoryBean   - Shutting down Quartz Scheduler
24-08-29.16:37:11.389 [SpringApplicationShutdownHook] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
24-08-29.16:37:11.389 [SpringApplicationShutdownHook] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
24-08-29.16:37:11.389 [SpringApplicationShutdownHook] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
24-08-29.16:37:11.390 [SpringApplicationShutdownHook] INFO  SimpleMessageListenerContainer - Shutdown ignored - container is already stopped
24-08-29.16:37:11.390 [SpringApplicationShutdownHook] INFO  SimpleMessageListenerContainer - Shutdown ignored - container is already stopped
24-08-29.16:37:11.460 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-08-29.16:37:11.468 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-08-29.16:37:11.468 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-2 - Shutdown initiated...
24-08-29.16:37:11.474 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-2 - Shutdown completed.
24-08-29.16:38:41.506 [main            ] INFO  RaffleActivityPartakeServiceTest - Starting RaffleActivityPartakeServiceTest using Java 1.8.0_171 on LAPTOP-6UTBSJGB with PID 25784 (started by 27132 in C:\Users\27132\Java\big-market\big-market-app)
24-08-29.16:38:41.507 [main            ] INFO  RaffleActivityPartakeServiceTest - The following 1 profile is active: "dev"
24-08-29.16:38:43.090 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-08-29.16:38:43.094 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-08-29.16:38:43.171 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 52 ms. Found 0 Redis repository interfaces.
24-08-29.16:38:43.704 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'stringToNoneShardingStrategyConfigurationConverter' of type [org.apache.shardingsphere.spring.boot.converter.StringToNoneShardingStrategyConfigurationConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-08-29.16:38:43.725 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.shardingsphere-org.apache.shardingsphere.spring.boot.prop.SpringBootPropertiesConfiguration' of type [org.apache.shardingsphere.spring.boot.prop.SpringBootPropertiesConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-08-29.16:38:44.019 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.apache.shardingsphere.spring.boot.ShardingSphereAutoConfiguration' of type [org.apache.shardingsphere.spring.boot.ShardingSphereAutoConfiguration$$EnhancerBySpringCGLIB$$c0e5efc1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-08-29.16:38:45.203 [main            ] INFO  Version                - Redisson 3.23.4
24-08-29.16:38:45.841 [redisson-netty-2-4] INFO  MasterPubSubConnectionPool - 1 connections initialized for 8.138.41.137/8.138.41.137:16379
24-08-29.16:38:46.357 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 8.138.41.137/8.138.41.137:16379
24-08-29.16:38:46.728 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-08-29.16:38:48.350 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-08-29.16:38:48.364 [main            ] INFO  HikariDataSource       - HikariPool-2 - Starting...
24-08-29.16:38:49.209 [main            ] INFO  HikariDataSource       - HikariPool-2 - Start completed.
24-08-29.16:38:54.376 [main            ] INFO  StdSchedulerFactory    - Using default implementation for ThreadExecutor
24-08-29.16:38:54.392 [main            ] INFO  SchedulerSignalerImpl  - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
24-08-29.16:38:54.392 [main            ] INFO  QuartzScheduler        - Quartz Scheduler v.2.3.2 created.
24-08-29.16:38:54.393 [main            ] INFO  RAMJobStore            - RAMJobStore initialized.
24-08-29.16:38:54.393 [main            ] INFO  QuartzScheduler        - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

24-08-29.16:38:54.393 [main            ] INFO  StdSchedulerFactory    - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
24-08-29.16:38:54.393 [main            ] INFO  StdSchedulerFactory    - Quartz scheduler version: 2.3.2
24-08-29.16:38:54.394 [main            ] INFO  QuartzScheduler        - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@549561ab
24-08-29.16:38:54.565 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-08-29.16:38:54.693 [main            ] INFO  CachingConnectionFactory - Attempting to connect to: [8.138.41.137:5672]
24-08-29.16:38:55.002 [main            ] INFO  CachingConnectionFactory - Created new connection: rabbitConnectionFactory#3e49adfa:0/SimpleConnection@515d6c9f [delegate=amqp://admin@8.138.41.137:5672/, localPort= 55634]
24-08-29.16:38:55.761 [main            ] INFO  SchedulerFactoryBean   - Starting Quartz Scheduler now
24-08-29.16:38:55.762 [main            ] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED started.
24-08-29.16:38:55.779 [main            ] INFO  RaffleActivityPartakeServiceTest - Started RaffleActivityPartakeServiceTest in 14.769 seconds (JVM running for 15.924)
24-08-29.16:39:03.910 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:39:04.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:39:04.766 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:39:04.766 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@109d3a82], lock=Optional.empty, window=Optional.empty)
24-08-29.16:39:04.766 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:39:04.766 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:39:04.819 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: select activity_name,
               strategy_id,
               order_id,
               order_time,
               order_state
        from user_raffle_order where activity_id = ? and user_id = ? and order_state = 'create'
24-08-29.16:39:04.819 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional.empty, lock=Optional.empty, window=Optional.empty)
24-08-29.16:39:04.819 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select activity_name,
               strategy_id,
               order_id,
               order_time,
               order_state
        from user_raffle_order_0 where activity_id = ? and user_id = ? and order_state = 'create' ::: [101, lyt]
24-08-29.16:39:05.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:39:05.076 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:39:05.078 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:39:05.078 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@109d3a82], lock=Optional.empty, window=Optional.empty)
24-08-29.16:39:05.078 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:39:05.078 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:39:05.205 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] INFO  SimpleMessageListenerContainer - Waiting for workers to finish.
24-08-29.16:39:05.244 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] INFO  SimpleMessageListenerContainer - Waiting for workers to finish.
24-08-29.16:39:05.244 [SpringApplicationShutdownHook] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
24-08-29.16:39:05.995 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] INFO  SimpleMessageListenerContainer - Successfully waited for workers to finish.
24-08-29.16:39:05.995 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] INFO  SimpleMessageListenerContainer - Successfully waited for workers to finish.
24-08-29.16:39:05.997 [SpringApplicationShutdownHook] INFO  SchedulerFactoryBean   - Shutting down Quartz Scheduler
24-08-29.16:39:05.997 [SpringApplicationShutdownHook] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
24-08-29.16:39:05.997 [SpringApplicationShutdownHook] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
24-08-29.16:39:05.997 [SpringApplicationShutdownHook] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
24-08-29.16:39:05.998 [SpringApplicationShutdownHook] INFO  SimpleMessageListenerContainer - Shutdown ignored - container is already stopped
24-08-29.16:39:05.998 [SpringApplicationShutdownHook] INFO  SimpleMessageListenerContainer - Shutdown ignored - container is already stopped
24-08-29.16:39:06.057 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-08-29.16:39:06.065 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-08-29.16:39:06.065 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-2 - Shutdown initiated...
24-08-29.16:39:06.071 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-2 - Shutdown completed.
24-08-29.16:39:37.684 [main            ] INFO  RaffleActivityPartakeServiceTest - Starting RaffleActivityPartakeServiceTest using Java 1.8.0_171 on LAPTOP-6UTBSJGB with PID 5276 (started by 27132 in C:\Users\27132\Java\big-market\big-market-app)
24-08-29.16:39:37.685 [main            ] INFO  RaffleActivityPartakeServiceTest - The following 1 profile is active: "dev"
24-08-29.16:39:39.212 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-08-29.16:39:39.216 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-08-29.16:39:39.288 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 51 ms. Found 0 Redis repository interfaces.
24-08-29.16:39:39.833 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'stringToNoneShardingStrategyConfigurationConverter' of type [org.apache.shardingsphere.spring.boot.converter.StringToNoneShardingStrategyConfigurationConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-08-29.16:39:39.847 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.shardingsphere-org.apache.shardingsphere.spring.boot.prop.SpringBootPropertiesConfiguration' of type [org.apache.shardingsphere.spring.boot.prop.SpringBootPropertiesConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-08-29.16:39:40.105 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.apache.shardingsphere.spring.boot.ShardingSphereAutoConfiguration' of type [org.apache.shardingsphere.spring.boot.ShardingSphereAutoConfiguration$$EnhancerBySpringCGLIB$$a2891204] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-08-29.16:39:41.231 [main            ] INFO  Version                - Redisson 3.23.4
24-08-29.16:39:41.870 [redisson-netty-2-6] INFO  MasterPubSubConnectionPool - 1 connections initialized for 8.138.41.137/8.138.41.137:16379
24-08-29.16:39:42.366 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 8.138.41.137/8.138.41.137:16379
24-08-29.16:39:42.738 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-08-29.16:39:44.166 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-08-29.16:39:44.179 [main            ] INFO  HikariDataSource       - HikariPool-2 - Starting...
24-08-29.16:39:44.960 [main            ] INFO  HikariDataSource       - HikariPool-2 - Start completed.
24-08-29.16:39:49.832 [main            ] INFO  StdSchedulerFactory    - Using default implementation for ThreadExecutor
24-08-29.16:39:49.844 [main            ] INFO  SchedulerSignalerImpl  - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
24-08-29.16:39:49.845 [main            ] INFO  QuartzScheduler        - Quartz Scheduler v.2.3.2 created.
24-08-29.16:39:49.845 [main            ] INFO  RAMJobStore            - RAMJobStore initialized.
24-08-29.16:39:49.845 [main            ] INFO  QuartzScheduler        - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

24-08-29.16:39:49.845 [main            ] INFO  StdSchedulerFactory    - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
24-08-29.16:39:49.845 [main            ] INFO  StdSchedulerFactory    - Quartz scheduler version: 2.3.2
24-08-29.16:39:49.846 [main            ] INFO  QuartzScheduler        - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@358caf3a
24-08-29.16:39:49.996 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-08-29.16:39:50.108 [main            ] INFO  CachingConnectionFactory - Attempting to connect to: [8.138.41.137:5672]
24-08-29.16:39:50.388 [main            ] INFO  CachingConnectionFactory - Created new connection: rabbitConnectionFactory#1ef4179:0/SimpleConnection@87f8146 [delegate=amqp://admin@8.138.41.137:5672/, localPort= 55740]
24-08-29.16:39:51.172 [main            ] INFO  SchedulerFactoryBean   - Starting Quartz Scheduler now
24-08-29.16:39:51.172 [main            ] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED started.
24-08-29.16:39:51.189 [main            ] INFO  RaffleActivityPartakeServiceTest - Started RaffleActivityPartakeServiceTest in 13.966 seconds (JVM running for 15.061)
24-08-29.16:39:55.724 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:39:55.801 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:39:56.730 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:39:56.730 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@4fceebc2], lock=Optional.empty, window=Optional.empty)
24-08-29.16:39:56.731 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:39:56.731 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:39:56.783 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: select activity_name,
               strategy_id,
               order_id,
               order_time,
               order_state
        from user_raffle_order where activity_id = ? and user_id = ? and order_state = 'create'
24-08-29.16:39:56.783 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional.empty, lock=Optional.empty, window=Optional.empty)
24-08-29.16:39:56.783 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select activity_name,
               strategy_id,
               order_id,
               order_time,
               order_state
        from user_raffle_order_0 where activity_id = ? and user_id = ? and order_state = 'create' ::: [101, lyt]
24-08-29.16:39:57.158 [main            ] INFO  AbstractRaffleActivityPartake - 创建参与活动【已存在未消费】userId:lyt activityId:101 userRaffleEntity:{"activityName":"测试","orderId":"182735359748","orderState":"create","orderTime":"2024-08-24 22:33:41","strategyId":100004,"userId":"lyt"}
24-08-29.16:40:00.500 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:40:00.501 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:40:00.501 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@4fceebc2], lock=Optional.empty, window=Optional.empty)
24-08-29.16:40:00.501 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:40:00.501 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:40:00.512 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: select total_count,
               total_count_surplus,
               day_count,
               day_count_surplus,
               month_count,
               month_count_surplus
        from raffle_activity_account where user_id = ? and activity_id = ?
24-08-29.16:40:00.512 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional.empty, lock=Optional.empty, window=Optional.empty)
24-08-29.16:40:00.512 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select total_count,
               total_count_surplus,
               day_count,
               day_count_surplus,
               month_count,
               month_count_surplus
        from raffle_activity_account_0 where user_id = ? and activity_id = ? ::: [lyt, 101]
24-08-29.16:40:00.571 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:40:00.634 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: select user_id,
               activity_id,
               `month`,
               month_count,
               month_count_surplus
        from raffle_activity_account_month
        where user_id = ?
          and activity_id = ?
          and `month` = ?;
24-08-29.16:40:00.634 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional.empty, lock=Optional.empty, window=Optional.empty)
24-08-29.16:40:00.634 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select user_id,
               activity_id,
               `month`,
               month_count,
               month_count_surplus
        from raffle_activity_account_month_0
        where user_id = ?
          and activity_id = ?
          and `month` = ?; ::: [lyt, 101, 2024-08]
24-08-29.16:40:00.693 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: select user_id,
               activity_id,
               `day`,
               day_count,
               day_count_surplus
        from raffle_activity_account_day
        where user_id = ?
          and activity_id = ?
          and `day` = ?;
24-08-29.16:40:00.693 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional.empty, lock=Optional.empty, window=Optional.empty)
24-08-29.16:40:00.693 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select user_id,
               activity_id,
               `day`,
               day_count,
               day_count_surplus
        from raffle_activity_account_day_0
        where user_id = ?
          and activity_id = ?
          and `day` = ?; ::: [lyt, 101, 2024-08-29]
24-08-29.16:40:03.329 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907653554
24-08-29.16:40:08.031 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:40:08.054 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: update raffle_activity_account set total_count_surplus = total_count_surplus - 1,
                                           day_count_surplus = day_count_surplus - 1,
                                           month_count_surplus = month_count_surplus - 1, update_time = now()
        where user_id = ? and activity_id = ?
        and total_count_surplus > 0 and day_count_surplus > 0 and month_count_surplus > 0;
24-08-29.16:40:08.054 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:40:08.054 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update raffle_activity_account_0 set total_count_surplus = total_count_surplus - 1,
                                           day_count_surplus = day_count_surplus - 1,
                                           month_count_surplus = month_count_surplus - 1, update_time = now()
        where user_id = ? and activity_id = ?
        and total_count_surplus > 0 and day_count_surplus > 0 and month_count_surplus > 0; ::: [lyt, 101]
24-08-29.16:40:08.088 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:40:08.089 [pool-7-thread-3 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:40:08.089 [pool-7-thread-3 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@4fceebc2], lock=Optional.empty, window=Optional.empty)
24-08-29.16:40:08.089 [pool-7-thread-3 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:40:08.089 [pool-7-thread-3 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:40:08.355 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: update raffle_activity_account_month
        set month_count_surplus = month_count_surplus - 1,update_time = now()
        where user_id = ? and activity_id = ?
        and `month` = ? and month_count_surplus > 0
24-08-29.16:40:08.355 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:40:08.355 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update raffle_activity_account_month_0
        set month_count_surplus = month_count_surplus - 1,update_time = now()
        where user_id = ? and activity_id = ?
        and `month` = ? and month_count_surplus > 0 ::: [lyt, 101, 2024-08]
24-08-29.16:40:08.446 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: update raffle_activity_account_day
        set day_count_surplus = day_count_surplus - 1, update_time = now()
        where user_id = ? and activity_id = ? and day = ? and day_count_surplus > 0
24-08-29.16:40:08.447 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:40:08.447 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update raffle_activity_account_day_0
        set day_count_surplus = day_count_surplus - 1, update_time = now()
        where user_id = ? and activity_id = ? and day = ? and day_count_surplus > 0 ::: [lyt, 101, 2024-08-29]
24-08-29.16:40:08.571 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_raffle_order(
            user_id, activity_id, activity_name, strategy_id, order_id, order_time, order_state, create_time, update_time
        )
        values(
                  ?, ?, ?, ?, ?, ?, ?, now(), now()
              )
24-08-29.16:40:08.571 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:40:08.571 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_raffle_order_0(
            user_id, activity_id, activity_name, strategy_id, order_id, order_time, order_state, create_time, update_time
        , id)
        values(?, ?, ?, ?, ?, ?, ?, now(), now(), ?) ::: [lyt, 101, 测试, 100004, 182907653554, 2024-08-29 16:39:55.724, create, 1035956214062100480]
24-08-29.16:40:08.778 [main            ] INFO  RaffleActivityPartakeServiceTest - 请求参数：{"activityId":101,"userId":"lyt"}
24-08-29.16:40:08.779 [main            ] INFO  RaffleActivityPartakeServiceTest - 测试结果：{"activityId":101,"activityName":"测试","orderId":"182907653554","orderState":"create","orderTime":"2024-08-29 16:39:55.724","strategyId":100004,"userId":"lyt"}
24-08-29.16:40:10.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:40:10.011 [pool-7-thread-4 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:40:10.011 [pool-7-thread-4 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@4fceebc2], lock=Optional.empty, window=Optional.empty)
24-08-29.16:40:10.011 [pool-7-thread-4 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:40:10.011 [pool-7-thread-4 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:40:10.068 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:40:15.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:40:15.016 [pool-7-thread-5 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:40:15.016 [pool-7-thread-5 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@4fceebc2], lock=Optional.empty, window=Optional.empty)
24-08-29.16:40:15.016 [pool-7-thread-5 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:40:15.016 [pool-7-thread-5 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:40:15.064 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:40:20.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:40:20.010 [pool-7-thread-6 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:40:20.010 [pool-7-thread-6 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@4fceebc2], lock=Optional.empty, window=Optional.empty)
24-08-29.16:40:20.010 [pool-7-thread-6 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:40:20.010 [pool-7-thread-6 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:40:20.083 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:40:25.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:40:25.087 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:40:25.156 [pool-7-thread-7 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:40:25.156 [pool-7-thread-7 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@4fceebc2], lock=Optional.empty, window=Optional.empty)
24-08-29.16:40:25.156 [pool-7-thread-7 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:40:25.156 [pool-7-thread-7 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:40:30.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:40:30.060 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:40:30.122 [pool-7-thread-8 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:40:30.122 [pool-7-thread-8 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@4fceebc2], lock=Optional.empty, window=Optional.empty)
24-08-29.16:40:30.122 [pool-7-thread-8 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:40:30.122 [pool-7-thread-8 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:40:35.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:40:35.005 [pool-7-thread-9 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:40:35.005 [pool-7-thread-9 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@4fceebc2], lock=Optional.empty, window=Optional.empty)
24-08-29.16:40:35.005 [pool-7-thread-9 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:40:35.005 [pool-7-thread-9 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:40:35.077 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:40:40.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:40:40.060 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:40:40.061 [pool-7-thread-10] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:40:40.061 [pool-7-thread-10] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@4fceebc2], lock=Optional.empty, window=Optional.empty)
24-08-29.16:40:40.061 [pool-7-thread-10] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:40:40.061 [pool-7-thread-10] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:40:45.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:40:45.074 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:40:45.132 [pool-7-thread-11] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:40:45.132 [pool-7-thread-11] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@4fceebc2], lock=Optional.empty, window=Optional.empty)
24-08-29.16:40:45.133 [pool-7-thread-11] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:40:45.133 [pool-7-thread-11] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:40:50.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:40:50.066 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:40:50.067 [pool-7-thread-12] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:40:50.067 [pool-7-thread-12] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@4fceebc2], lock=Optional.empty, window=Optional.empty)
24-08-29.16:40:50.067 [pool-7-thread-12] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:40:50.067 [pool-7-thread-12] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:40:55.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:40:55.015 [pool-7-thread-13] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:40:55.015 [pool-7-thread-13] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@4fceebc2], lock=Optional.empty, window=Optional.empty)
24-08-29.16:40:55.015 [pool-7-thread-13] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:40:55.015 [pool-7-thread-13] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:40:55.076 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:41:00.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:41:00.003 [pool-7-thread-14] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:41:00.003 [pool-7-thread-14] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@4fceebc2], lock=Optional.empty, window=Optional.empty)
24-08-29.16:41:00.003 [pool-7-thread-14] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:41:00.003 [pool-7-thread-14] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:41:00.079 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:41:05.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:41:05.061 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:41:05.121 [pool-7-thread-15] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:41:05.121 [pool-7-thread-15] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@4fceebc2], lock=Optional.empty, window=Optional.empty)
24-08-29.16:41:05.121 [pool-7-thread-15] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:41:05.121 [pool-7-thread-15] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:41:10.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:41:10.072 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:41:10.074 [pool-7-thread-16] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60) limit 10;;
24-08-29.16:41:10.074 [pool-7-thread-16] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@4fceebc2], lock=Optional.empty, window=Optional.empty)
24-08-29.16:41:10.074 [pool-7-thread-16] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:41:10.074 [pool-7-thread-16] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60) ORDER BY id ASC  limit 10;;
24-08-29.16:41:10.339 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] INFO  SimpleMessageListenerContainer - Waiting for workers to finish.
24-08-29.16:41:10.389 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] INFO  SimpleMessageListenerContainer - Waiting for workers to finish.
24-08-29.16:41:10.389 [SpringApplicationShutdownHook] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
24-08-29.16:41:10.672 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] INFO  SimpleMessageListenerContainer - Successfully waited for workers to finish.
24-08-29.16:41:10.672 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] INFO  SimpleMessageListenerContainer - Successfully waited for workers to finish.
24-08-29.16:41:10.674 [SpringApplicationShutdownHook] INFO  SchedulerFactoryBean   - Shutting down Quartz Scheduler
24-08-29.16:41:10.674 [SpringApplicationShutdownHook] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
24-08-29.16:41:10.674 [SpringApplicationShutdownHook] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
24-08-29.16:41:10.675 [SpringApplicationShutdownHook] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
24-08-29.16:41:10.676 [SpringApplicationShutdownHook] INFO  SimpleMessageListenerContainer - Shutdown ignored - container is already stopped
24-08-29.16:41:10.676 [SpringApplicationShutdownHook] INFO  SimpleMessageListenerContainer - Shutdown ignored - container is already stopped
24-08-29.16:41:10.735 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-08-29.16:41:10.742 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-08-29.16:41:10.743 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-2 - Shutdown initiated...
24-08-29.16:41:10.749 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-2 - Shutdown completed.
24-08-29.16:41:14.037 [main            ] INFO  RaffleActivityPartakeServiceTest - Starting RaffleActivityPartakeServiceTest using Java 1.8.0_171 on LAPTOP-6UTBSJGB with PID 14700 (started by 27132 in C:\Users\27132\Java\big-market\big-market-app)
24-08-29.16:41:14.038 [main            ] INFO  RaffleActivityPartakeServiceTest - The following 1 profile is active: "dev"
24-08-29.16:41:15.729 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-08-29.16:41:15.733 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-08-29.16:41:15.814 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 60 ms. Found 0 Redis repository interfaces.
24-08-29.16:41:16.365 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'stringToNoneShardingStrategyConfigurationConverter' of type [org.apache.shardingsphere.spring.boot.converter.StringToNoneShardingStrategyConfigurationConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-08-29.16:41:16.381 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.shardingsphere-org.apache.shardingsphere.spring.boot.prop.SpringBootPropertiesConfiguration' of type [org.apache.shardingsphere.spring.boot.prop.SpringBootPropertiesConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-08-29.16:41:16.643 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.apache.shardingsphere.spring.boot.ShardingSphereAutoConfiguration' of type [org.apache.shardingsphere.spring.boot.ShardingSphereAutoConfiguration$$EnhancerBySpringCGLIB$$7c0b4d66] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-08-29.16:41:17.775 [main            ] INFO  Version                - Redisson 3.23.4
24-08-29.16:41:18.392 [redisson-netty-2-4] INFO  MasterPubSubConnectionPool - 1 connections initialized for 8.138.41.137/8.138.41.137:16379
24-08-29.16:41:18.788 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 8.138.41.137/8.138.41.137:16379
24-08-29.16:41:19.184 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-08-29.16:41:20.722 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-08-29.16:41:20.740 [main            ] INFO  HikariDataSource       - HikariPool-2 - Starting...
24-08-29.16:41:21.472 [main            ] INFO  HikariDataSource       - HikariPool-2 - Start completed.
24-08-29.16:41:26.430 [main            ] INFO  StdSchedulerFactory    - Using default implementation for ThreadExecutor
24-08-29.16:41:26.443 [main            ] INFO  SchedulerSignalerImpl  - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
24-08-29.16:41:26.443 [main            ] INFO  QuartzScheduler        - Quartz Scheduler v.2.3.2 created.
24-08-29.16:41:26.445 [main            ] INFO  RAMJobStore            - RAMJobStore initialized.
24-08-29.16:41:26.445 [main            ] INFO  QuartzScheduler        - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

24-08-29.16:41:26.445 [main            ] INFO  StdSchedulerFactory    - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
24-08-29.16:41:26.445 [main            ] INFO  StdSchedulerFactory    - Quartz scheduler version: 2.3.2
24-08-29.16:41:26.446 [main            ] INFO  QuartzScheduler        - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@472d201
24-08-29.16:41:26.631 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-08-29.16:41:26.740 [main            ] INFO  CachingConnectionFactory - Attempting to connect to: [8.138.41.137:5672]
24-08-29.16:41:27.033 [main            ] INFO  CachingConnectionFactory - Created new connection: rabbitConnectionFactory#301608d:0/SimpleConnection@50fd7d94 [delegate=amqp://admin@8.138.41.137:5672/, localPort= 55854]
24-08-29.16:41:27.769 [main            ] INFO  SchedulerFactoryBean   - Starting Quartz Scheduler now
24-08-29.16:41:27.769 [main            ] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED started.
24-08-29.16:41:27.786 [main            ] INFO  RaffleActivityPartakeServiceTest - Started RaffleActivityPartakeServiceTest in 14.225 seconds (JVM running for 15.467)
24-08-29.16:41:29.087 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: select activity_name,
               strategy_id,
               order_id,
               order_time,
               order_state
        from user_raffle_order where activity_id = ? and user_id = ? and order_state = 'create'
24-08-29.16:41:29.087 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional.empty, lock=Optional.empty, window=Optional.empty)
24-08-29.16:41:29.088 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select activity_name,
               strategy_id,
               order_id,
               order_time,
               order_state
        from user_raffle_order_0 where activity_id = ? and user_id = ? and order_state = 'create' ::: [101, lyt]
24-08-29.16:41:29.565 [main            ] INFO  AbstractRaffleActivityPartake - 创建参与活动【已存在未消费】userId:lyt activityId:101 userRaffleEntity:{"activityName":"测试","orderId":"182735359748","orderState":"create","orderTime":"2024-08-24 22:33:41","strategyId":100004,"userId":"lyt"}
24-08-29.16:41:29.577 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: select total_count,
               total_count_surplus,
               day_count,
               day_count_surplus,
               month_count,
               month_count_surplus
        from raffle_activity_account where user_id = ? and activity_id = ?
24-08-29.16:41:29.578 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional.empty, lock=Optional.empty, window=Optional.empty)
24-08-29.16:41:29.578 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select total_count,
               total_count_surplus,
               day_count,
               day_count_surplus,
               month_count,
               month_count_surplus
        from raffle_activity_account_0 where user_id = ? and activity_id = ? ::: [lyt, 101]
24-08-29.16:41:29.646 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: select user_id,
               activity_id,
               `month`,
               month_count,
               month_count_surplus
        from raffle_activity_account_month
        where user_id = ?
          and activity_id = ?
          and `month` = ?;
24-08-29.16:41:29.646 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional.empty, lock=Optional.empty, window=Optional.empty)
24-08-29.16:41:29.646 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select user_id,
               activity_id,
               `month`,
               month_count,
               month_count_surplus
        from raffle_activity_account_month_0
        where user_id = ?
          and activity_id = ?
          and `month` = ?; ::: [lyt, 101, 2024-08]
24-08-29.16:41:29.710 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: select user_id,
               activity_id,
               `day`,
               day_count,
               day_count_surplus
        from raffle_activity_account_day
        where user_id = ?
          and activity_id = ?
          and `day` = ?;
24-08-29.16:41:29.711 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional.empty, lock=Optional.empty, window=Optional.empty)
24-08-29.16:41:29.711 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select user_id,
               activity_id,
               `day`,
               day_count,
               day_count_surplus
        from raffle_activity_account_day_0
        where user_id = ?
          and activity_id = ?
          and `day` = ?; ::: [lyt, 101, 2024-08-29]
24-08-29.16:41:29.907 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907689867
24-08-29.16:41:29.943 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: update raffle_activity_account set total_count_surplus = total_count_surplus - 1,
                                           day_count_surplus = day_count_surplus - 1,
                                           month_count_surplus = month_count_surplus - 1, update_time = now()
        where user_id = ? and activity_id = ?
        and total_count_surplus > 0 and day_count_surplus > 0 and month_count_surplus > 0;
24-08-29.16:41:29.943 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:41:29.943 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update raffle_activity_account_0 set total_count_surplus = total_count_surplus - 1,
                                           day_count_surplus = day_count_surplus - 1,
                                           month_count_surplus = month_count_surplus - 1, update_time = now()
        where user_id = ? and activity_id = ?
        and total_count_surplus > 0 and day_count_surplus > 0 and month_count_surplus > 0; ::: [lyt, 101]
24-08-29.16:41:30.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:41:30.077 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:41:30.251 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: update raffle_activity_account_month
        set month_count_surplus = month_count_surplus - 1,update_time = now()
        where user_id = ? and activity_id = ?
        and `month` = ? and month_count_surplus > 0
24-08-29.16:41:30.251 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:41:30.251 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update raffle_activity_account_month_0
        set month_count_surplus = month_count_surplus - 1,update_time = now()
        where user_id = ? and activity_id = ?
        and `month` = ? and month_count_surplus > 0 ::: [lyt, 101, 2024-08]
24-08-29.16:41:30.290 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000) limit 10;;
24-08-29.16:41:30.290 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@78b33816], lock=Optional.empty, window=Optional.empty)
24-08-29.16:41:30.290 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:41:30.290 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:41:30.358 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: update raffle_activity_account_day
        set day_count_surplus = day_count_surplus - 1, update_time = now()
        where user_id = ? and activity_id = ? and day = ? and day_count_surplus > 0
24-08-29.16:41:30.358 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:41:30.358 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update raffle_activity_account_day_0
        set day_count_surplus = day_count_surplus - 1, update_time = now()
        where user_id = ? and activity_id = ? and day = ? and day_count_surplus > 0 ::: [lyt, 101, 2024-08-29]
24-08-29.16:41:30.556 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_raffle_order(
            user_id, activity_id, activity_name, strategy_id, order_id, order_time, order_state, create_time, update_time
        )
        values(
                  ?, ?, ?, ?, ?, ?, ?, now(), now()
              )
24-08-29.16:41:30.556 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:41:30.556 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_raffle_order_0(
            user_id, activity_id, activity_name, strategy_id, order_id, order_time, order_state, create_time, update_time
        , id)
        values(?, ?, ?, ?, ?, ?, ?, now(), now(), ?) ::: [lyt, 101, 测试, 100004, 182907689867, 2024-08-29 16:41:28.034, create, 1035956557932113920]
24-08-29.16:41:30.854 [main            ] INFO  RaffleActivityPartakeServiceTest - 请求参数：{"activityId":101,"userId":"lyt"}
24-08-29.16:41:30.854 [main            ] INFO  RaffleActivityPartakeServiceTest - 测试结果：{"activityId":101,"activityName":"测试","orderId":"182907689867","orderState":"create","orderTime":"2024-08-29 16:41:28.034","strategyId":100004,"userId":"lyt"}
24-08-29.16:41:35.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:41:35.069 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:41:39.610 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000) limit 10;;
24-08-29.16:41:39.611 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@78b33816], lock=Optional.empty, window=Optional.empty)
24-08-29.16:41:39.611 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:41:39.611 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:42:39.047 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:42:39.048 [HikariPool-1 housekeeper] WARN  HikariPool             - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m18s220ms287µs300ns).
24-08-29.16:42:39.048 [HikariPool-2 housekeeper] WARN  HikariPool             - HikariPool-2 - Thread starvation or clock leap detected (housekeeper delta=1m17s467ms664µs600ns).
24-08-29.16:42:39.097 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:42:39.099 [pool-7-thread-3 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000) limit 10;;
24-08-29.16:42:39.099 [pool-7-thread-3 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@78b33816], lock=Optional.empty, window=Optional.empty)
24-08-29.16:42:39.099 [pool-7-thread-3 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:42:39.099 [pool-7-thread-3 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:42:39.143 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] INFO  SimpleMessageListenerContainer - Waiting for workers to finish.
24-08-29.16:42:39.229 [SpringApplicationShutdownHook] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
24-08-29.16:42:39.229 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] INFO  SimpleMessageListenerContainer - Waiting for workers to finish.
24-08-29.16:42:42.145 [main            ] INFO  RaffleActivityPartakeServiceTest - Starting RaffleActivityPartakeServiceTest using Java 1.8.0_171 on LAPTOP-6UTBSJGB with PID 652 (started by 27132 in C:\Users\27132\Java\big-market\big-market-app)
24-08-29.16:42:42.145 [main            ] INFO  RaffleActivityPartakeServiceTest - The following 1 profile is active: "dev"
24-08-29.16:42:43.897 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-08-29.16:42:43.903 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-08-29.16:42:43.997 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 66 ms. Found 0 Redis repository interfaces.
24-08-29.16:42:44.555 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'stringToNoneShardingStrategyConfigurationConverter' of type [org.apache.shardingsphere.spring.boot.converter.StringToNoneShardingStrategyConfigurationConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-08-29.16:42:44.571 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.shardingsphere-org.apache.shardingsphere.spring.boot.prop.SpringBootPropertiesConfiguration' of type [org.apache.shardingsphere.spring.boot.prop.SpringBootPropertiesConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-08-29.16:42:44.841 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.apache.shardingsphere.spring.boot.ShardingSphereAutoConfiguration' of type [org.apache.shardingsphere.spring.boot.ShardingSphereAutoConfiguration$$EnhancerBySpringCGLIB$$9e37de7d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-08-29.16:42:46.008 [main            ] INFO  Version                - Redisson 3.23.4
24-08-29.16:42:46.715 [redisson-netty-2-5] INFO  MasterPubSubConnectionPool - 1 connections initialized for 8.138.41.137/8.138.41.137:16379
24-08-29.16:42:47.350 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 8.138.41.137/8.138.41.137:16379
24-08-29.16:42:47.747 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-08-29.16:42:49.271 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-08-29.16:42:49.285 [main            ] INFO  HikariDataSource       - HikariPool-2 - Starting...
24-08-29.16:42:50.150 [main            ] INFO  HikariDataSource       - HikariPool-2 - Start completed.
24-08-29.16:42:55.188 [main            ] INFO  StdSchedulerFactory    - Using default implementation for ThreadExecutor
24-08-29.16:42:55.203 [main            ] INFO  SchedulerSignalerImpl  - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
24-08-29.16:42:55.205 [main            ] INFO  QuartzScheduler        - Quartz Scheduler v.2.3.2 created.
24-08-29.16:42:55.206 [main            ] INFO  RAMJobStore            - RAMJobStore initialized.
24-08-29.16:42:55.206 [main            ] INFO  QuartzScheduler        - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

24-08-29.16:42:55.206 [main            ] INFO  StdSchedulerFactory    - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
24-08-29.16:42:55.206 [main            ] INFO  StdSchedulerFactory    - Quartz scheduler version: 2.3.2
24-08-29.16:42:55.206 [main            ] INFO  QuartzScheduler        - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@1bd98c48
24-08-29.16:42:55.371 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-08-29.16:42:55.493 [main            ] INFO  CachingConnectionFactory - Attempting to connect to: [8.138.41.137:5672]
24-08-29.16:42:55.812 [main            ] INFO  CachingConnectionFactory - Created new connection: rabbitConnectionFactory#67954d71:0/SimpleConnection@4f1fb8fc [delegate=amqp://admin@8.138.41.137:5672/, localPort= 55990]
24-08-29.16:42:56.880 [main            ] INFO  SchedulerFactoryBean   - Starting Quartz Scheduler now
24-08-29.16:42:56.880 [main            ] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED started.
24-08-29.16:42:56.899 [main            ] INFO  RaffleActivityPartakeServiceTest - Started RaffleActivityPartakeServiceTest in 15.244 seconds (JVM running for 16.404)
24-08-29.16:42:58.221 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: select activity_name,
               strategy_id,
               order_id,
               order_time,
               order_state
        from user_raffle_order where activity_id = ? and user_id = ? and order_state = 'create'
24-08-29.16:42:58.221 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional.empty, lock=Optional.empty, window=Optional.empty)
24-08-29.16:42:58.221 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select activity_name,
               strategy_id,
               order_id,
               order_time,
               order_state
        from user_raffle_order_0 where activity_id = ? and user_id = ? and order_state = 'create' ::: [101, lyt]
24-08-29.16:42:58.547 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] INFO  SimpleMessageListenerContainer - Waiting for workers to finish.
24-08-29.16:42:58.600 [SpringApplicationShutdownHook] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
24-08-29.16:42:58.600 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] INFO  SimpleMessageListenerContainer - Waiting for workers to finish.
24-08-29.16:42:58.952 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] INFO  SimpleMessageListenerContainer - Successfully waited for workers to finish.
24-08-29.16:42:59.554 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] INFO  SimpleMessageListenerContainer - Successfully waited for workers to finish.
24-08-29.16:42:59.556 [SpringApplicationShutdownHook] INFO  SchedulerFactoryBean   - Shutting down Quartz Scheduler
24-08-29.16:42:59.556 [SpringApplicationShutdownHook] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
24-08-29.16:42:59.556 [SpringApplicationShutdownHook] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
24-08-29.16:42:59.557 [SpringApplicationShutdownHook] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
24-08-29.16:42:59.558 [SpringApplicationShutdownHook] INFO  SimpleMessageListenerContainer - Shutdown ignored - container is already stopped
24-08-29.16:42:59.558 [SpringApplicationShutdownHook] INFO  SimpleMessageListenerContainer - Shutdown ignored - container is already stopped
24-08-29.16:42:59.625 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-08-29.16:42:59.632 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-08-29.16:42:59.632 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-2 - Shutdown initiated...
24-08-29.16:42:59.641 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-2 - Shutdown completed.
24-08-29.16:43:27.816 [main            ] INFO  AwardServiceTest       - Starting AwardServiceTest using Java 1.8.0_171 on LAPTOP-6UTBSJGB with PID 28000 (started by 27132 in C:\Users\27132\Java\big-market\big-market-app)
24-08-29.16:43:27.817 [main            ] INFO  AwardServiceTest       - The following 1 profile is active: "dev"
24-08-29.16:43:29.459 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-08-29.16:43:29.465 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-08-29.16:43:29.548 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 57 ms. Found 0 Redis repository interfaces.
24-08-29.16:43:30.130 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'stringToNoneShardingStrategyConfigurationConverter' of type [org.apache.shardingsphere.spring.boot.converter.StringToNoneShardingStrategyConfigurationConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-08-29.16:43:30.149 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.shardingsphere-org.apache.shardingsphere.spring.boot.prop.SpringBootPropertiesConfiguration' of type [org.apache.shardingsphere.spring.boot.prop.SpringBootPropertiesConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-08-29.16:43:30.419 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.apache.shardingsphere.spring.boot.ShardingSphereAutoConfiguration' of type [org.apache.shardingsphere.spring.boot.ShardingSphereAutoConfiguration$$EnhancerBySpringCGLIB$$c0e5efc1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-08-29.16:43:31.566 [main            ] INFO  Version                - Redisson 3.23.4
24-08-29.16:43:32.218 [redisson-netty-2-4] INFO  MasterPubSubConnectionPool - 1 connections initialized for 8.138.41.137/8.138.41.137:16379
24-08-29.16:43:32.798 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 8.138.41.137/8.138.41.137:16379
24-08-29.16:43:33.214 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-08-29.16:43:34.766 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-08-29.16:43:34.779 [main            ] INFO  HikariDataSource       - HikariPool-2 - Starting...
24-08-29.16:43:35.503 [main            ] INFO  HikariDataSource       - HikariPool-2 - Start completed.
24-08-29.16:43:40.304 [main            ] INFO  StdSchedulerFactory    - Using default implementation for ThreadExecutor
24-08-29.16:43:40.317 [main            ] INFO  SchedulerSignalerImpl  - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
24-08-29.16:43:40.317 [main            ] INFO  QuartzScheduler        - Quartz Scheduler v.2.3.2 created.
24-08-29.16:43:40.318 [main            ] INFO  RAMJobStore            - RAMJobStore initialized.
24-08-29.16:43:40.318 [main            ] INFO  QuartzScheduler        - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

24-08-29.16:43:40.318 [main            ] INFO  StdSchedulerFactory    - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
24-08-29.16:43:40.318 [main            ] INFO  StdSchedulerFactory    - Quartz scheduler version: 2.3.2
24-08-29.16:43:40.318 [main            ] INFO  QuartzScheduler        - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@61ce2d47
24-08-29.16:43:40.466 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-08-29.16:43:40.581 [main            ] INFO  CachingConnectionFactory - Attempting to connect to: [8.138.41.137:5672]
24-08-29.16:43:41.585 [main            ] INFO  CachingConnectionFactory - Created new connection: rabbitConnectionFactory#10ef09e3:0/SimpleConnection@3e4dabcb [delegate=amqp://admin@8.138.41.137:5672/, localPort= 56091]
24-08-29.16:43:42.679 [main            ] INFO  SchedulerFactoryBean   - Starting Quartz Scheduler now
24-08-29.16:43:42.680 [main            ] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED started.
24-08-29.16:43:42.698 [main            ] INFO  AwardServiceTest       - Started AwardServiceTest in 15.376 seconds (JVM running for 16.524)
24-08-29.16:43:43.036 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907745706
24-08-29.16:43:43.039 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290774570
24-08-29.16:43:46.649 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:43:47.231 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:43:48.043 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) limit 10;;
24-08-29.16:43:48.043 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@6bc879a8], lock=Optional.empty, window=Optional.empty)
24-08-29.16:43:48.043 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:43:48.043 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:43:50.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:43:50.046 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:43:50.046 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:43:50.046 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907745706, 101, OpenAI 增加使用次数, 2024-08-29 16:43:43.037, create, 1035957141716316160]
24-08-29.16:43:50.065 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:43:50.116 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) limit 10;;
24-08-29.16:43:50.116 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@6bc879a8], lock=Optional.empty, window=Optional.empty)
24-08-29.16:43:50.116 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:43:50.116 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:43:50.456 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:43:50.457 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:43:50.457 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290774570","timeStamp":"2024-08-29 16:43:43.039"}, 18290774570, create, 1035957144492945409]
24-08-29.16:43:54.390 [pool-7-thread-3 ] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290774570","timeStamp":"2024-08-29 16:43:43.039"}
24-08-29.16:43:54.402 [pool-7-thread-3 ] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:43:54.402 [pool-7-thread-3 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:43:54.402 [pool-7-thread-3 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290774570]
24-08-29.16:43:54.402 [pool-7-thread-3 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290774570]
24-08-29.16:43:54.487 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290774570","timeStamp":"2024-08-29 16:43:43.039"}
24-08-29.16:43:54.844 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907750658
24-08-29.16:43:54.844 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290775065
24-08-29.16:43:56.512 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:43:56.515 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:43:56.515 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:43:56.515 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907750658, 101, OpenAI 增加使用次数, 2024-08-29 16:43:54.844, create, 1035957170141114368]
24-08-29.16:43:56.565 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:43:57.664 [pool-7-thread-4 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) limit 10;;
24-08-29.16:43:57.665 [pool-7-thread-4 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@6bc879a8], lock=Optional.empty, window=Optional.empty)
24-08-29.16:43:57.665 [pool-7-thread-4 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:43:57.665 [pool-7-thread-4 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:43:57.717 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:43:57.717 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:43:57.717 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290775065","timeStamp":"2024-08-29 16:43:54.844"}, 18290775065, create, 1035957175182667777]
24-08-29.16:43:58.187 [pool-7-thread-5 ] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290775065","timeStamp":"2024-08-29 16:43:54.844"}
24-08-29.16:43:58.187 [pool-7-thread-5 ] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:43:58.187 [pool-7-thread-5 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:43:58.187 [pool-7-thread-5 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290775065]
24-08-29.16:43:58.187 [pool-7-thread-5 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290775065]
24-08-29.16:43:58.270 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290775065","timeStamp":"2024-08-29 16:43:54.844"}
24-08-29.16:43:58.692 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907752272
24-08-29.16:43:58.692 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290775227
24-08-29.16:43:59.969 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:43:59.969 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:43:59.969 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907752272, 101, OpenAI 增加使用次数, 2024-08-29 16:43:58.692, create, 1035957184624046080]
24-08-29.16:44:00.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:44:00.054 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:44:02.213 [pool-7-thread-6 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) limit 10;;
24-08-29.16:44:02.213 [pool-7-thread-6 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@6bc879a8], lock=Optional.empty, window=Optional.empty)
24-08-29.16:44:02.213 [pool-7-thread-6 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:44:02.213 [pool-7-thread-6 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:44:02.336 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:44:02.336 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:02.336 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290775227","timeStamp":"2024-08-29 16:43:58.692"}, 18290775227, create, 1035957194556157953]
24-08-29.16:44:02.905 [pool-7-thread-7 ] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290775227","timeStamp":"2024-08-29 16:43:58.692"}
24-08-29.16:44:02.906 [pool-7-thread-7 ] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:44:02.906 [pool-7-thread-7 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:44:02.906 [pool-7-thread-7 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290775227]
24-08-29.16:44:02.906 [pool-7-thread-7 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290775227]
24-08-29.16:44:02.961 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290775227","timeStamp":"2024-08-29 16:43:58.692"}
24-08-29.16:44:03.415 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907754253
24-08-29.16:44:03.415 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290775425
24-08-29.16:44:03.416 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:44:03.416 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:03.416 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907754253, 101, OpenAI 增加使用次数, 2024-08-29 16:44:03.415, create, 1035957199086006272]
24-08-29.16:44:03.565 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:44:03.565 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:03.565 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290775425","timeStamp":"2024-08-29 16:44:03.415"}, 18290775425, create, 1035957199706763265]
24-08-29.16:44:04.074 [pool-7-thread-8 ] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290775425","timeStamp":"2024-08-29 16:44:03.415"}
24-08-29.16:44:04.075 [pool-7-thread-8 ] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:44:04.075 [pool-7-thread-8 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:44:04.075 [pool-7-thread-8 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290775425]
24-08-29.16:44:04.075 [pool-7-thread-8 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290775425]
24-08-29.16:44:04.127 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290775425","timeStamp":"2024-08-29 16:44:03.415"}
24-08-29.16:44:04.585 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907754744
24-08-29.16:44:04.585 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290775474
24-08-29.16:44:04.586 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:44:04.586 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:04.586 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907754744, 101, OpenAI 增加使用次数, 2024-08-29 16:44:04.585, create, 1035957203989147648]
24-08-29.16:44:04.876 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:44:04.876 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:04.876 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290775474","timeStamp":"2024-08-29 16:44:04.585"}, 18290775474, create, 1035957205209690113]
24-08-29.16:44:05.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:44:05.063 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:44:05.110 [pool-7-thread-9 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) limit 10;;
24-08-29.16:44:05.110 [pool-7-thread-9 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@6bc879a8], lock=Optional.empty, window=Optional.empty)
24-08-29.16:44:05.110 [pool-7-thread-9 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:44:05.110 [pool-7-thread-9 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:44:05.262 [pool-7-thread-10] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290775474","timeStamp":"2024-08-29 16:44:04.585"}
24-08-29.16:44:05.263 [pool-7-thread-10] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:44:05.263 [pool-7-thread-10] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:44:05.263 [pool-7-thread-10] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290775474]
24-08-29.16:44:05.263 [pool-7-thread-10] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290775474]
24-08-29.16:44:05.458 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290775474","timeStamp":"2024-08-29 16:44:04.585"}
24-08-29.16:44:05.765 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907755239
24-08-29.16:44:05.765 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290775523
24-08-29.16:44:05.766 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:44:05.767 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:05.767 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907755239, 101, OpenAI 增加使用次数, 2024-08-29 16:44:05.765, create, 1035957208942620672]
24-08-29.16:44:05.955 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:44:05.955 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:05.955 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290775523","timeStamp":"2024-08-29 16:44:05.765"}, 18290775523, create, 1035957209735344129]
24-08-29.16:44:06.383 [pool-7-thread-11] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290775523","timeStamp":"2024-08-29 16:44:05.765"}
24-08-29.16:44:06.383 [pool-7-thread-11] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:44:06.383 [pool-7-thread-11] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:44:06.383 [pool-7-thread-11] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290775523]
24-08-29.16:44:06.383 [pool-7-thread-11] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290775523]
24-08-29.16:44:06.437 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290775523","timeStamp":"2024-08-29 16:44:05.765"}
24-08-29.16:44:06.897 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907755714
24-08-29.16:44:06.897 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290775571
24-08-29.16:44:06.899 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:44:06.899 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:06.899 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907755714, 101, OpenAI 增加使用次数, 2024-08-29 16:44:06.897, create, 1035957213690572800]
24-08-29.16:44:07.062 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:44:07.062 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:07.062 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290775571","timeStamp":"2024-08-29 16:44:06.897"}, 18290775571, create, 1035957214378438657]
24-08-29.16:44:07.645 [pool-7-thread-12] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290775571","timeStamp":"2024-08-29 16:44:06.897"}
24-08-29.16:44:07.646 [pool-7-thread-12] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:44:07.646 [pool-7-thread-12] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:44:07.646 [pool-7-thread-12] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290775571]
24-08-29.16:44:07.646 [pool-7-thread-12] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290775571]
24-08-29.16:44:07.709 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290775571","timeStamp":"2024-08-29 16:44:06.897"}
24-08-29.16:44:08.146 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907756237
24-08-29.16:44:08.146 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290775623
24-08-29.16:44:08.147 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:44:08.147 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:08.147 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907756237, 101, OpenAI 增加使用次数, 2024-08-29 16:44:08.146, create, 1035957218929258496]
24-08-29.16:44:08.319 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:44:08.319 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:08.319 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290775623","timeStamp":"2024-08-29 16:44:08.146"}, 18290775623, create, 1035957219646484481]
24-08-29.16:44:08.733 [pool-7-thread-13] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290775623","timeStamp":"2024-08-29 16:44:08.146"}
24-08-29.16:44:08.734 [pool-7-thread-13] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:44:08.734 [pool-7-thread-13] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:44:08.734 [pool-7-thread-13] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290775623]
24-08-29.16:44:08.734 [pool-7-thread-13] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290775623]
24-08-29.16:44:08.788 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290775623","timeStamp":"2024-08-29 16:44:08.146"}
24-08-29.16:44:09.246 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907756699
24-08-29.16:44:09.246 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290775669
24-08-29.16:44:09.248 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:44:09.248 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:09.248 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907756699, 101, OpenAI 增加使用次数, 2024-08-29 16:44:09.246, create, 1035957223542992896]
24-08-29.16:44:09.378 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:44:09.378 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:09.378 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290775669","timeStamp":"2024-08-29 16:44:09.246"}, 18290775669, create, 1035957224088252417]
24-08-29.16:44:10.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:44:10.055 [pool-7-thread-14] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290775669","timeStamp":"2024-08-29 16:44:09.246"}
24-08-29.16:44:10.056 [pool-7-thread-14] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:44:10.056 [pool-7-thread-14] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:44:10.056 [pool-7-thread-14] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290775669]
24-08-29.16:44:10.056 [pool-7-thread-14] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290775669]
24-08-29.16:44:10.057 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:44:10.058 [pool-7-thread-15] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) limit 10;;
24-08-29.16:44:10.058 [pool-7-thread-15] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@6bc879a8], lock=Optional.empty, window=Optional.empty)
24-08-29.16:44:10.058 [pool-7-thread-15] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:44:10.058 [pool-7-thread-15] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:44:10.111 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290775669","timeStamp":"2024-08-29 16:44:09.246"}
24-08-29.16:44:10.559 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907757250
24-08-29.16:44:10.559 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290775725
24-08-29.16:44:10.560 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:44:10.560 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:10.560 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907757250, 101, OpenAI 增加使用次数, 2024-08-29 16:44:10.559, create, 1035957229050114048]
24-08-29.16:44:10.895 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:44:10.895 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:10.895 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290775725","timeStamp":"2024-08-29 16:44:10.559"}, 18290775725, create, 1035957230455205889]
24-08-29.16:44:11.315 [pool-7-thread-16] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290775725","timeStamp":"2024-08-29 16:44:10.559"}
24-08-29.16:44:11.316 [pool-7-thread-16] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:44:11.316 [pool-7-thread-16] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:44:11.316 [pool-7-thread-16] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290775725]
24-08-29.16:44:11.316 [pool-7-thread-16] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290775725]
24-08-29.16:44:11.389 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290775725","timeStamp":"2024-08-29 16:44:10.559"}
24-08-29.16:44:11.819 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907757778
24-08-29.16:44:11.819 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290775777
24-08-29.16:44:11.820 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:44:11.820 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:11.820 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907757778, 101, OpenAI 增加使用次数, 2024-08-29 16:44:11.819, create, 1035957234334937088]
24-08-29.16:44:12.030 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:44:12.030 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:12.030 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290775777","timeStamp":"2024-08-29 16:44:11.819"}, 18290775777, create, 1035957235211546625]
24-08-29.16:44:12.452 [pool-7-thread-17] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290775777","timeStamp":"2024-08-29 16:44:11.819"}
24-08-29.16:44:12.452 [pool-7-thread-17] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:44:12.452 [pool-7-thread-17] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:44:12.452 [pool-7-thread-17] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290775777]
24-08-29.16:44:12.452 [pool-7-thread-17] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290775777]
24-08-29.16:44:12.497 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290775777","timeStamp":"2024-08-29 16:44:11.819"}
24-08-29.16:44:12.952 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907758253
24-08-29.16:44:12.952 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290775825
24-08-29.16:44:12.954 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:44:12.954 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:12.954 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907758253, 101, OpenAI 增加使用次数, 2024-08-29 16:44:12.952, create, 1035957239087083520]
24-08-29.16:44:13.186 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:44:13.186 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:13.186 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290775825","timeStamp":"2024-08-29 16:44:12.952"}, 18290775825, create, 1035957240060162049]
24-08-29.16:44:13.628 [pool-7-thread-18] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290775825","timeStamp":"2024-08-29 16:44:12.952"}
24-08-29.16:44:13.629 [pool-7-thread-18] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:44:13.629 [pool-7-thread-18] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:44:13.629 [pool-7-thread-18] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290775825]
24-08-29.16:44:13.629 [pool-7-thread-18] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290775825]
24-08-29.16:44:13.710 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290775825","timeStamp":"2024-08-29 16:44:12.952"}
24-08-29.16:44:14.133 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907758749
24-08-29.16:44:14.133 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290775874
24-08-29.16:44:14.135 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:44:14.135 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:14.135 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907758749, 101, OpenAI 增加使用次数, 2024-08-29 16:44:14.133, create, 1035957244036362240]
24-08-29.16:44:14.309 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:44:14.309 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:14.309 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290775874","timeStamp":"2024-08-29 16:44:14.133"}, 18290775874, create, 1035957244774559745]
24-08-29.16:44:14.741 [pool-7-thread-19] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290775874","timeStamp":"2024-08-29 16:44:14.133"}
24-08-29.16:44:14.742 [pool-7-thread-19] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:44:14.742 [pool-7-thread-19] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:44:14.742 [pool-7-thread-19] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290775874]
24-08-29.16:44:14.742 [pool-7-thread-19] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290775874]
24-08-29.16:44:14.798 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290775874","timeStamp":"2024-08-29 16:44:14.133"}
24-08-29.16:44:15.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:44:15.054 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:44:15.056 [pool-7-thread-20] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) limit 10;;
24-08-29.16:44:15.056 [pool-7-thread-20] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@6bc879a8], lock=Optional.empty, window=Optional.empty)
24-08-29.16:44:15.056 [pool-7-thread-20] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:44:15.056 [pool-7-thread-20] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:44:15.250 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907759217
24-08-29.16:44:15.250 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290775921
24-08-29.16:44:15.251 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:44:15.251 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:15.252 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907759217, 101, OpenAI 增加使用次数, 2024-08-29 16:44:15.25, create, 1035957248725594112]
24-08-29.16:44:15.387 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:44:15.387 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:15.387 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290775921","timeStamp":"2024-08-29 16:44:15.25"}, 18290775921, create, 1035957249296019457]
24-08-29.16:44:15.793 [pool-7-thread-1 ] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290775921","timeStamp":"2024-08-29 16:44:15.25"}
24-08-29.16:44:15.794 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:44:15.794 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:44:15.794 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290775921]
24-08-29.16:44:15.794 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290775921]
24-08-29.16:44:15.895 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290775921","timeStamp":"2024-08-29 16:44:15.25"}
24-08-29.16:44:16.306 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907759660
24-08-29.16:44:16.306 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290775966
24-08-29.16:44:16.307 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:44:16.307 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:16.307 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907759660, 101, OpenAI 增加使用次数, 2024-08-29 16:44:16.306, create, 1035957253150584832]
24-08-29.16:44:16.465 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:44:16.465 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:16.465 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290775966","timeStamp":"2024-08-29 16:44:16.306"}, 18290775966, create, 1035957253817479169]
24-08-29.16:44:16.994 [pool-7-thread-2 ] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290775966","timeStamp":"2024-08-29 16:44:16.306"}
24-08-29.16:44:16.995 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:44:16.995 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:44:16.995 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290775966]
24-08-29.16:44:16.995 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290775966]
24-08-29.16:44:17.040 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290775966","timeStamp":"2024-08-29 16:44:16.306"}
24-08-29.16:44:17.499 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907760160
24-08-29.16:44:17.499 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290776016
24-08-29.16:44:17.502 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:44:17.502 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:17.502 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907760160, 101, OpenAI 增加使用次数, 2024-08-29 16:44:17.499, create, 1035957258162778112]
24-08-29.16:44:17.689 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:44:17.689 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:17.690 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776016","timeStamp":"2024-08-29 16:44:17.499"}, 18290776016, create, 1035957258951307265]
24-08-29.16:44:18.162 [pool-7-thread-3 ] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776016","timeStamp":"2024-08-29 16:44:17.499"}
24-08-29.16:44:18.163 [pool-7-thread-3 ] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:44:18.163 [pool-7-thread-3 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:44:18.163 [pool-7-thread-3 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290776016]
24-08-29.16:44:18.164 [pool-7-thread-3 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290776016]
24-08-29.16:44:18.216 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776016","timeStamp":"2024-08-29 16:44:17.499"}
24-08-29.16:44:18.669 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907760651
24-08-29.16:44:18.669 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290776065
24-08-29.16:44:18.671 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:44:18.671 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:18.671 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907760651, 101, OpenAI 增加使用次数, 2024-08-29 16:44:18.669, create, 1035957263070113792]
24-08-29.16:44:18.837 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:44:18.837 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:18.837 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776065","timeStamp":"2024-08-29 16:44:18.669"}, 18290776065, create, 1035957263762173953]
24-08-29.16:44:19.335 [pool-7-thread-4 ] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776065","timeStamp":"2024-08-29 16:44:18.669"}
24-08-29.16:44:19.336 [pool-7-thread-4 ] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:44:19.336 [pool-7-thread-4 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:44:19.336 [pool-7-thread-4 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290776065]
24-08-29.16:44:19.336 [pool-7-thread-4 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290776065]
24-08-29.16:44:19.479 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776065","timeStamp":"2024-08-29 16:44:18.669"}
24-08-29.16:44:19.849 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907761146
24-08-29.16:44:19.849 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290776114
24-08-29.16:44:19.850 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:44:19.850 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:19.850 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907761146, 101, OpenAI 增加使用次数, 2024-08-29 16:44:19.849, create, 1035957268015198208]
24-08-29.16:44:20.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:44:20.059 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:44:20.059 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:20.059 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776114","timeStamp":"2024-08-29 16:44:19.849"}, 18290776114, create, 1035957268891807745]
24-08-29.16:44:20.068 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:44:20.069 [pool-7-thread-5 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) limit 10;;
24-08-29.16:44:20.069 [pool-7-thread-5 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@6bc879a8], lock=Optional.empty, window=Optional.empty)
24-08-29.16:44:20.069 [pool-7-thread-5 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:44:20.069 [pool-7-thread-5 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:44:20.425 [pool-7-thread-6 ] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776114","timeStamp":"2024-08-29 16:44:19.849"}
24-08-29.16:44:20.425 [pool-7-thread-6 ] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:44:20.425 [pool-7-thread-6 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:44:20.426 [pool-7-thread-6 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290776114]
24-08-29.16:44:20.426 [pool-7-thread-6 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290776114]
24-08-29.16:44:20.473 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776114","timeStamp":"2024-08-29 16:44:19.849"}
24-08-29.16:44:20.935 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907761602
24-08-29.16:44:20.935 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290776160
24-08-29.16:44:20.936 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:44:20.936 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:20.936 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907761602, 101, OpenAI 增加使用次数, 2024-08-29 16:44:20.935, create, 1035957272566018048]
24-08-29.16:44:21.176 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:44:21.176 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:21.176 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776160","timeStamp":"2024-08-29 16:44:20.935"}, 18290776160, create, 1035957273572651009]
24-08-29.16:44:21.863 [pool-7-thread-7 ] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776160","timeStamp":"2024-08-29 16:44:20.935"}
24-08-29.16:44:21.864 [pool-7-thread-7 ] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:44:21.864 [pool-7-thread-7 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:44:21.864 [pool-7-thread-7 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290776160]
24-08-29.16:44:21.864 [pool-7-thread-7 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290776160]
24-08-29.16:44:21.971 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776160","timeStamp":"2024-08-29 16:44:20.935"}
24-08-29.16:44:22.378 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907762207
24-08-29.16:44:22.378 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290776220
24-08-29.16:44:22.379 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:44:22.379 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:22.379 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907762207, 101, OpenAI 增加使用次数, 2024-08-29 16:44:22.378, create, 1035957278618398720]
24-08-29.16:44:22.525 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:44:22.525 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:22.525 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776220","timeStamp":"2024-08-29 16:44:22.378"}, 18290776220, create, 1035957279230767105]
24-08-29.16:44:23.140 [pool-7-thread-8 ] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776220","timeStamp":"2024-08-29 16:44:22.378"}
24-08-29.16:44:23.141 [pool-7-thread-8 ] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:44:23.141 [pool-7-thread-8 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:44:23.141 [pool-7-thread-8 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290776220]
24-08-29.16:44:23.141 [pool-7-thread-8 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290776220]
24-08-29.16:44:23.306 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776220","timeStamp":"2024-08-29 16:44:22.378"}
24-08-29.16:44:23.641 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907762737
24-08-29.16:44:23.641 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290776273
24-08-29.16:44:23.642 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:44:23.642 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:23.642 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907762737, 101, OpenAI 增加使用次数, 2024-08-29 16:44:23.641, create, 1035957283919998976]
24-08-29.16:44:23.798 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:44:23.798 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:23.798 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776273","timeStamp":"2024-08-29 16:44:23.641"}, 18290776273, create, 1035957284570116097]
24-08-29.16:44:24.243 [pool-7-thread-9 ] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776273","timeStamp":"2024-08-29 16:44:23.641"}
24-08-29.16:44:24.245 [pool-7-thread-9 ] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:44:24.245 [pool-7-thread-9 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:44:24.245 [pool-7-thread-9 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290776273]
24-08-29.16:44:24.245 [pool-7-thread-9 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290776273]
24-08-29.16:44:24.295 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776273","timeStamp":"2024-08-29 16:44:23.641"}
24-08-29.16:44:24.744 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907763199
24-08-29.16:44:24.744 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290776319
24-08-29.16:44:24.745 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:44:24.745 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:24.745 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907763199, 101, OpenAI 增加使用次数, 2024-08-29 16:44:24.744, create, 1035957288546316288]
24-08-29.16:44:25.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:44:25.016 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:44:25.016 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:25.016 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776319","timeStamp":"2024-08-29 16:44:24.744"}, 18290776319, create, 1035957289678778369]
24-08-29.16:44:25.072 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:44:25.118 [pool-7-thread-10] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) limit 10;;
24-08-29.16:44:25.118 [pool-7-thread-10] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@6bc879a8], lock=Optional.empty, window=Optional.empty)
24-08-29.16:44:25.118 [pool-7-thread-10] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:44:25.118 [pool-7-thread-10] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:44:25.479 [pool-7-thread-11] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776319","timeStamp":"2024-08-29 16:44:24.744"}
24-08-29.16:44:25.481 [pool-7-thread-11] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:44:25.481 [pool-7-thread-11] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:44:25.481 [pool-7-thread-11] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290776319]
24-08-29.16:44:25.481 [pool-7-thread-11] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290776319]
24-08-29.16:44:25.535 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776319","timeStamp":"2024-08-29 16:44:24.744"}
24-08-29.16:44:25.986 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907763720
24-08-29.16:44:25.986 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290776372
24-08-29.16:44:25.987 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:44:25.987 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:25.987 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907763720, 101, OpenAI 增加使用次数, 2024-08-29 16:44:25.986, create, 1035957293751447552]
24-08-29.16:44:26.210 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:44:26.210 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:26.210 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776372","timeStamp":"2024-08-29 16:44:25.986"}, 18290776372, create, 1035957294690971649]
24-08-29.16:44:26.878 [pool-7-thread-12] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776372","timeStamp":"2024-08-29 16:44:25.986"}
24-08-29.16:44:26.879 [pool-7-thread-12] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:44:26.879 [pool-7-thread-12] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:44:26.879 [pool-7-thread-12] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290776372]
24-08-29.16:44:26.879 [pool-7-thread-12] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290776372]
24-08-29.16:44:26.945 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776372","timeStamp":"2024-08-29 16:44:25.986"}
24-08-29.16:44:27.388 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907764308
24-08-29.16:44:27.388 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290776430
24-08-29.16:44:27.389 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:44:27.389 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:27.389 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907764308, 101, OpenAI 增加使用次数, 2024-08-29 16:44:27.388, create, 1035957299636056064]
24-08-29.16:44:27.546 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:44:27.546 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:27.546 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776430","timeStamp":"2024-08-29 16:44:27.388"}, 18290776430, create, 1035957300290367489]
24-08-29.16:44:28.185 [pool-7-thread-13] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776430","timeStamp":"2024-08-29 16:44:27.388"}
24-08-29.16:44:28.186 [pool-7-thread-13] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:44:28.186 [pool-7-thread-13] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:44:28.186 [pool-7-thread-13] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290776430]
24-08-29.16:44:28.186 [pool-7-thread-13] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290776430]
24-08-29.16:44:28.257 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776430","timeStamp":"2024-08-29 16:44:27.388"}
24-08-29.16:44:28.693 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907764855
24-08-29.16:44:28.693 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290776485
24-08-29.16:44:28.694 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:44:28.694 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:28.694 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907764855, 101, OpenAI 增加使用次数, 2024-08-29 16:44:28.693, create, 1035957305105428480]
24-08-29.16:44:28.872 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:44:28.872 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:28.872 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776485","timeStamp":"2024-08-29 16:44:28.693"}, 18290776485, create, 1035957305852014593]
24-08-29.16:44:29.385 [pool-7-thread-15] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776485","timeStamp":"2024-08-29 16:44:28.693"}
24-08-29.16:44:29.385 [pool-7-thread-15] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:44:29.386 [pool-7-thread-15] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:44:29.386 [pool-7-thread-15] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290776485]
24-08-29.16:44:29.386 [pool-7-thread-15] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290776485]
24-08-29.16:44:29.440 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776485","timeStamp":"2024-08-29 16:44:28.693"}
24-08-29.16:44:29.886 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907765356
24-08-29.16:44:29.886 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290776535
24-08-29.16:44:29.887 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:44:29.887 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:29.887 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907765356, 101, OpenAI 增加使用次数, 2024-08-29 16:44:29.886, create, 1035957310113427456]
24-08-29.16:44:30.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:44:30.057 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:44:30.058 [pool-7-thread-14] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) limit 10;;
24-08-29.16:44:30.058 [pool-7-thread-14] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@6bc879a8], lock=Optional.empty, window=Optional.empty)
24-08-29.16:44:30.058 [pool-7-thread-14] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:44:30.058 [pool-7-thread-14] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:44:30.101 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:44:30.101 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:30.101 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776535","timeStamp":"2024-08-29 16:44:29.886"}, 18290776535, create, 1035957311011008513]
24-08-29.16:44:30.493 [pool-7-thread-16] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776535","timeStamp":"2024-08-29 16:44:29.886"}
24-08-29.16:44:30.493 [pool-7-thread-16] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:44:30.493 [pool-7-thread-16] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:44:30.493 [pool-7-thread-16] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290776535]
24-08-29.16:44:30.493 [pool-7-thread-16] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290776535]
24-08-29.16:44:30.539 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776535","timeStamp":"2024-08-29 16:44:29.886"}
24-08-29.16:44:30.995 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907765821
24-08-29.16:44:30.995 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290776582
24-08-29.16:44:30.996 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:44:30.996 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:30.996 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907765821, 101, OpenAI 增加使用次数, 2024-08-29 16:44:30.995, create, 1035957314760716288]
24-08-29.16:44:31.193 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:44:31.193 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:31.193 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776582","timeStamp":"2024-08-29 16:44:30.995"}, 18290776582, create, 1035957315586994177]
24-08-29.16:44:31.624 [pool-7-thread-17] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776582","timeStamp":"2024-08-29 16:44:30.995"}
24-08-29.16:44:31.625 [pool-7-thread-17] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:44:31.625 [pool-7-thread-17] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:44:31.625 [pool-7-thread-17] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290776582]
24-08-29.16:44:31.625 [pool-7-thread-17] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290776582]
24-08-29.16:44:31.687 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776582","timeStamp":"2024-08-29 16:44:30.995"}
24-08-29.16:44:32.129 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907766297
24-08-29.16:44:32.129 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290776629
24-08-29.16:44:32.130 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:44:32.130 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:32.130 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907766297, 101, OpenAI 增加使用次数, 2024-08-29 16:44:32.129, create, 1035957319517057024]
24-08-29.16:44:32.308 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:44:32.308 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:32.308 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776629","timeStamp":"2024-08-29 16:44:32.129"}, 18290776629, create, 1035957320267837441]
24-08-29.16:44:32.713 [pool-7-thread-18] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776629","timeStamp":"2024-08-29 16:44:32.129"}
24-08-29.16:44:32.714 [pool-7-thread-18] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:44:32.714 [pool-7-thread-18] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:44:32.714 [pool-7-thread-18] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290776629]
24-08-29.16:44:32.714 [pool-7-thread-18] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290776629]
24-08-29.16:44:32.760 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776629","timeStamp":"2024-08-29 16:44:32.129"}
24-08-29.16:44:33.228 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907766758
24-08-29.16:44:33.228 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290776675
24-08-29.16:44:33.229 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:44:33.229 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:33.229 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907766758, 101, OpenAI 增加使用次数, 2024-08-29 16:44:33.228, create, 1035957324126597120]
24-08-29.16:44:33.377 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:44:33.377 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:33.377 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776675","timeStamp":"2024-08-29 16:44:33.228"}, 18290776675, create, 1035957324747354113]
24-08-29.16:44:33.835 [pool-7-thread-19] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776675","timeStamp":"2024-08-29 16:44:33.228"}
24-08-29.16:44:33.835 [pool-7-thread-19] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:44:33.835 [pool-7-thread-19] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:44:33.835 [pool-7-thread-19] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290776675]
24-08-29.16:44:33.835 [pool-7-thread-19] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290776675]
24-08-29.16:44:33.888 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776675","timeStamp":"2024-08-29 16:44:33.228"}
24-08-29.16:44:34.345 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907767226
24-08-29.16:44:34.345 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290776722
24-08-29.16:44:34.346 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:44:34.346 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:34.346 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907767226, 101, OpenAI 增加使用次数, 2024-08-29 16:44:34.345, create, 1035957328811634688]
24-08-29.16:44:34.523 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:44:34.523 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:34.523 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776722","timeStamp":"2024-08-29 16:44:34.345"}, 18290776722, create, 1035957329558220801]
24-08-29.16:44:34.978 [pool-7-thread-20] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776722","timeStamp":"2024-08-29 16:44:34.345"}
24-08-29.16:44:34.979 [pool-7-thread-20] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:44:34.979 [pool-7-thread-20] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:44:34.979 [pool-7-thread-20] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290776722]
24-08-29.16:44:34.979 [pool-7-thread-20] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290776722]
24-08-29.16:44:35.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:44:35.036 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776722","timeStamp":"2024-08-29 16:44:34.345"}
24-08-29.16:44:35.072 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:44:35.120 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) limit 10;;
24-08-29.16:44:35.120 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@6bc879a8], lock=Optional.empty, window=Optional.empty)
24-08-29.16:44:35.120 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:44:35.120 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:44:35.494 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907767708
24-08-29.16:44:35.494 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290776770
24-08-29.16:44:35.495 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:44:35.495 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:35.495 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907767708, 101, OpenAI 增加使用次数, 2024-08-29 16:44:35.494, create, 1035957333635084288]
24-08-29.16:44:35.635 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:44:35.635 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:35.635 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776770","timeStamp":"2024-08-29 16:44:35.494"}, 18290776770, create, 1035957334213898241]
24-08-29.16:44:35.985 [pool-7-thread-2 ] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776770","timeStamp":"2024-08-29 16:44:35.494"}
24-08-29.16:44:35.985 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:44:35.985 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:44:35.985 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290776770]
24-08-29.16:44:35.985 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290776770]
24-08-29.16:44:36.086 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776770","timeStamp":"2024-08-29 16:44:35.494"}
24-08-29.16:44:36.490 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907768126
24-08-29.16:44:36.490 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290776812
24-08-29.16:44:36.491 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:44:36.491 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:36.491 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907768126, 101, OpenAI 增加使用次数, 2024-08-29 16:44:36.49, create, 1035957337812611072]
24-08-29.16:44:36.744 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:44:36.744 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:36.744 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776812","timeStamp":"2024-08-29 16:44:36.49"}, 18290776812, create, 1035957338865381377]
24-08-29.16:44:37.196 [pool-7-thread-3 ] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776812","timeStamp":"2024-08-29 16:44:36.49"}
24-08-29.16:44:37.197 [pool-7-thread-3 ] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:44:37.197 [pool-7-thread-3 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:44:37.197 [pool-7-thread-3 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290776812]
24-08-29.16:44:37.197 [pool-7-thread-3 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290776812]
24-08-29.16:44:37.259 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776812","timeStamp":"2024-08-29 16:44:36.49"}
24-08-29.16:44:37.703 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907768635
24-08-29.16:44:37.703 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290776863
24-08-29.16:44:37.703 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:44:37.705 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:37.705 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907768635, 101, OpenAI 增加使用次数, 2024-08-29 16:44:37.703, create, 1035957342896107520]
24-08-29.16:44:37.875 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:44:37.875 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:37.875 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776863","timeStamp":"2024-08-29 16:44:37.703"}, 18290776863, create, 1035957343617527809]
24-08-29.16:44:38.296 [pool-7-thread-4 ] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776863","timeStamp":"2024-08-29 16:44:37.703"}
24-08-29.16:44:38.296 [pool-7-thread-4 ] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:44:38.296 [pool-7-thread-4 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:44:38.296 [pool-7-thread-4 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290776863]
24-08-29.16:44:38.296 [pool-7-thread-4 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290776863]
24-08-29.16:44:38.340 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776863","timeStamp":"2024-08-29 16:44:37.703"}
24-08-29.16:44:38.807 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907769098
24-08-29.16:44:38.807 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290776909
24-08-29.16:44:38.808 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:44:38.808 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:38.808 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907769098, 101, OpenAI 增加使用次数, 2024-08-29 16:44:38.807, create, 1035957347526619136]
24-08-29.16:44:39.037 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:44:39.037 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:39.037 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776909","timeStamp":"2024-08-29 16:44:38.807"}, 18290776909, create, 1035957348487114753]
24-08-29.16:44:39.447 [pool-7-thread-5 ] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776909","timeStamp":"2024-08-29 16:44:38.807"}
24-08-29.16:44:39.447 [pool-7-thread-5 ] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:44:39.447 [pool-7-thread-5 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:44:39.447 [pool-7-thread-5 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290776909]
24-08-29.16:44:39.447 [pool-7-thread-5 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290776909]
24-08-29.16:44:39.507 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776909","timeStamp":"2024-08-29 16:44:38.807"}
24-08-29.16:44:39.953 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907769578
24-08-29.16:44:39.953 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290776957
24-08-29.16:44:39.955 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:44:39.955 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:39.955 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907769578, 101, OpenAI 增加使用次数, 2024-08-29 16:44:39.953, create, 1035957352333291520]
24-08-29.16:44:40.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:44:40.063 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:44:40.114 [pool-7-thread-6 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) limit 10;;
24-08-29.16:44:40.114 [pool-7-thread-6 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@6bc879a8], lock=Optional.empty, window=Optional.empty)
24-08-29.16:44:40.114 [pool-7-thread-6 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:44:40.114 [pool-7-thread-6 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:44:40.203 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:44:40.203 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:40.204 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776957","timeStamp":"2024-08-29 16:44:39.953"}, 18290776957, create, 1035957353381867521]
24-08-29.16:44:40.614 [pool-7-thread-7 ] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776957","timeStamp":"2024-08-29 16:44:39.953"}
24-08-29.16:44:40.615 [pool-7-thread-7 ] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:44:40.615 [pool-7-thread-7 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:44:40.615 [pool-7-thread-7 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290776957]
24-08-29.16:44:40.615 [pool-7-thread-7 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290776957]
24-08-29.16:44:40.677 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290776957","timeStamp":"2024-08-29 16:44:39.953"}
24-08-29.16:44:41.116 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907770066
24-08-29.16:44:41.116 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290777006
24-08-29.16:44:41.117 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:44:41.117 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:41.117 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907770066, 101, OpenAI 增加使用次数, 2024-08-29 16:44:41.116, create, 1035957357215461376]
24-08-29.16:44:41.335 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:44:41.335 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:41.335 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290777006","timeStamp":"2024-08-29 16:44:41.116"}, 18290777006, create, 1035957358125625345]
24-08-29.16:44:41.754 [pool-7-thread-8 ] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290777006","timeStamp":"2024-08-29 16:44:41.116"}
24-08-29.16:44:41.755 [pool-7-thread-8 ] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:44:41.755 [pool-7-thread-8 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:44:41.755 [pool-7-thread-8 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290777006]
24-08-29.16:44:41.755 [pool-7-thread-8 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290777006]
24-08-29.16:44:41.835 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290777006","timeStamp":"2024-08-29 16:44:41.116"}
24-08-29.16:44:42.267 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907770549
24-08-29.16:44:42.267 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290777054
24-08-29.16:44:42.268 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:44:42.268 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:42.268 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907770549, 101, OpenAI 增加使用次数, 2024-08-29 16:44:42.267, create, 1035957362038910976]
24-08-29.16:44:42.457 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:44:42.457 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:42.457 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290777054","timeStamp":"2024-08-29 16:44:42.267"}, 18290777054, create, 1035957362835828737]
24-08-29.16:44:43.030 [pool-7-thread-9 ] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290777054","timeStamp":"2024-08-29 16:44:42.267"}
24-08-29.16:44:43.030 [pool-7-thread-9 ] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:44:43.030 [pool-7-thread-9 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:44:43.030 [pool-7-thread-9 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290777054]
24-08-29.16:44:43.030 [pool-7-thread-9 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290777054]
24-08-29.16:44:43.108 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290777054","timeStamp":"2024-08-29 16:44:42.267"}
24-08-29.16:44:43.541 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907771083
24-08-29.16:44:43.541 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290777108
24-08-29.16:44:43.542 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:44:43.542 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:43.542 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907771083, 101, OpenAI 增加使用次数, 2024-08-29 16:44:43.541, create, 1035957367386648576]
24-08-29.16:44:43.796 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:44:43.796 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:43.796 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290777108","timeStamp":"2024-08-29 16:44:43.541"}, 18290777108, create, 1035957368447807489]
24-08-29.16:44:44.225 [pool-7-thread-10] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290777108","timeStamp":"2024-08-29 16:44:43.541"}
24-08-29.16:44:44.225 [pool-7-thread-10] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:44:44.225 [pool-7-thread-10] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:44:44.225 [pool-7-thread-10] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290777108]
24-08-29.16:44:44.225 [pool-7-thread-10] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290777108]
24-08-29.16:44:44.270 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290777108","timeStamp":"2024-08-29 16:44:43.541"}
24-08-29.16:44:44.740 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907771586
24-08-29.16:44:44.740 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290777158
24-08-29.16:44:44.741 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:44:44.741 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:44.741 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907771586, 101, OpenAI 增加使用次数, 2024-08-29 16:44:44.74, create, 1035957372415619072]
24-08-29.16:44:44.944 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:44:44.944 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:44.944 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290777158","timeStamp":"2024-08-29 16:44:44.74"}, 18290777158, create, 1035957373262868481]
24-08-29.16:44:45.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:44:45.007 [pool-7-thread-11] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) limit 10;;
24-08-29.16:44:45.007 [pool-7-thread-11] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@6bc879a8], lock=Optional.empty, window=Optional.empty)
24-08-29.16:44:45.007 [pool-7-thread-11] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:44:45.007 [pool-7-thread-11] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:44:45.051 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:44:45.369 [pool-7-thread-12] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290777158","timeStamp":"2024-08-29 16:44:44.74"}
24-08-29.16:44:45.369 [pool-7-thread-12] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:44:45.370 [pool-7-thread-12] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:44:45.370 [pool-7-thread-12] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290777158]
24-08-29.16:44:45.370 [pool-7-thread-12] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290777158]
24-08-29.16:44:45.429 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290777158","timeStamp":"2024-08-29 16:44:44.74"}
24-08-29.16:44:45.875 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907772062
24-08-29.16:44:45.875 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290777206
24-08-29.16:44:45.876 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:44:45.876 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:45.876 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907772062, 101, OpenAI 增加使用次数, 2024-08-29 16:44:45.875, create, 1035957377171959808]
24-08-29.16:44:46.104 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:44:46.104 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:46.104 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290777206","timeStamp":"2024-08-29 16:44:45.875"}, 18290777206, create, 1035957378128261121]
24-08-29.16:44:46.510 [pool-7-thread-13] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290777206","timeStamp":"2024-08-29 16:44:45.875"}
24-08-29.16:44:46.510 [pool-7-thread-13] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:44:46.510 [pool-7-thread-13] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:44:46.510 [pool-7-thread-13] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290777206]
24-08-29.16:44:46.510 [pool-7-thread-13] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290777206]
24-08-29.16:44:46.610 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290777206","timeStamp":"2024-08-29 16:44:45.875"}
24-08-29.16:44:47.022 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907772543
24-08-29.16:44:47.022 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290777254
24-08-29.16:44:47.023 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:44:47.023 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:47.023 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907772543, 101, OpenAI 增加使用次数, 2024-08-29 16:44:47.022, create, 1035957381982826496]
24-08-29.16:44:47.176 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:44:47.176 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:44:47.176 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290777254","timeStamp":"2024-08-29 16:44:47.022"}, 18290777254, create, 1035957382624555009]
24-08-29.16:44:47.590 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] INFO  SimpleMessageListenerContainer - Waiting for workers to finish.
24-08-29.16:44:47.643 [pool-7-thread-15] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290777254","timeStamp":"2024-08-29 16:44:47.022"}
24-08-29.16:44:47.644 [pool-7-thread-15] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:44:47.644 [pool-7-thread-15] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:44:47.644 [pool-7-thread-15] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290777254]
24-08-29.16:44:47.644 [pool-7-thread-15] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290777254]
24-08-29.16:44:47.645 [pool-7-thread-15] ERROR AwardRepository        - 写入中奖记录，发送MQ消息失败 userId:lyt topic:send_award
24-08-29.16:44:47.648 [SpringApplicationShutdownHook] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
24-08-29.16:44:47.648 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] INFO  SimpleMessageListenerContainer - Waiting for workers to finish.
24-08-29.16:44:47.648 [pool-7-thread-15] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'fail', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:44:47.648 [pool-7-thread-15] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:44:47.648 [pool-7-thread-15] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'fail', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290777254]
24-08-29.16:44:47.648 [pool-7-thread-15] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'fail', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290777254]
24-08-29.16:44:47.651 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] INFO  SimpleMessageListenerContainer - Successfully waited for workers to finish.
24-08-29.16:44:47.692 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] INFO  SimpleMessageListenerContainer - Successfully waited for workers to finish.
24-08-29.16:44:47.694 [SpringApplicationShutdownHook] INFO  SchedulerFactoryBean   - Shutting down Quartz Scheduler
24-08-29.16:44:47.694 [SpringApplicationShutdownHook] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
24-08-29.16:44:47.694 [SpringApplicationShutdownHook] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
24-08-29.16:44:47.694 [SpringApplicationShutdownHook] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
24-08-29.16:44:47.695 [SpringApplicationShutdownHook] INFO  SimpleMessageListenerContainer - Shutdown ignored - container is already stopped
24-08-29.16:44:47.695 [SpringApplicationShutdownHook] INFO  SimpleMessageListenerContainer - Shutdown ignored - container is already stopped
24-08-29.16:44:47.803 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-08-29.16:44:47.810 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-08-29.16:44:47.810 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-2 - Shutdown initiated...
24-08-29.16:44:47.817 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-2 - Shutdown completed.
24-08-29.16:47:10.170 [main            ] INFO  AwardServiceTest       - Starting AwardServiceTest using Java 1.8.0_171 on LAPTOP-6UTBSJGB with PID 27000 (started by 27132 in C:\Users\27132\Java\big-market\big-market-app)
24-08-29.16:47:10.171 [main            ] INFO  AwardServiceTest       - The following 1 profile is active: "dev"
24-08-29.16:47:11.711 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-08-29.16:47:11.717 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-08-29.16:47:11.795 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 53 ms. Found 0 Redis repository interfaces.
24-08-29.16:47:12.316 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'stringToNoneShardingStrategyConfigurationConverter' of type [org.apache.shardingsphere.spring.boot.converter.StringToNoneShardingStrategyConfigurationConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-08-29.16:47:12.331 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.shardingsphere-org.apache.shardingsphere.spring.boot.prop.SpringBootPropertiesConfiguration' of type [org.apache.shardingsphere.spring.boot.prop.SpringBootPropertiesConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-08-29.16:47:12.593 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.apache.shardingsphere.spring.boot.ShardingSphereAutoConfiguration' of type [org.apache.shardingsphere.spring.boot.ShardingSphereAutoConfiguration$$EnhancerBySpringCGLIB$$c4c47828] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-08-29.16:47:13.817 [main            ] INFO  Version                - Redisson 3.23.4
24-08-29.16:47:14.436 [redisson-netty-2-4] INFO  MasterPubSubConnectionPool - 1 connections initialized for 8.138.41.137/8.138.41.137:16379
24-08-29.16:47:14.863 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 8.138.41.137/8.138.41.137:16379
24-08-29.16:47:15.236 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-08-29.16:47:16.583 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-08-29.16:47:16.598 [main            ] INFO  HikariDataSource       - HikariPool-2 - Starting...
24-08-29.16:47:17.199 [main            ] INFO  HikariDataSource       - HikariPool-2 - Start completed.
24-08-29.16:47:21.858 [main            ] INFO  StdSchedulerFactory    - Using default implementation for ThreadExecutor
24-08-29.16:47:21.872 [main            ] INFO  SchedulerSignalerImpl  - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
24-08-29.16:47:21.872 [main            ] INFO  QuartzScheduler        - Quartz Scheduler v.2.3.2 created.
24-08-29.16:47:21.873 [main            ] INFO  RAMJobStore            - RAMJobStore initialized.
24-08-29.16:47:21.874 [main            ] INFO  QuartzScheduler        - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

24-08-29.16:47:21.874 [main            ] INFO  StdSchedulerFactory    - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
24-08-29.16:47:21.874 [main            ] INFO  StdSchedulerFactory    - Quartz scheduler version: 2.3.2
24-08-29.16:47:21.874 [main            ] INFO  QuartzScheduler        - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@3760f3e8
24-08-29.16:47:22.021 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-08-29.16:47:22.133 [main            ] INFO  CachingConnectionFactory - Attempting to connect to: [8.138.41.137:5672]
24-08-29.16:47:22.395 [main            ] INFO  CachingConnectionFactory - Created new connection: rabbitConnectionFactory#10ef09e3:0/SimpleConnection@7fcbed77 [delegate=amqp://admin@8.138.41.137:5672/, localPort= 56263]
24-08-29.16:47:23.182 [main            ] INFO  SchedulerFactoryBean   - Starting Quartz Scheduler now
24-08-29.16:47:23.182 [main            ] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED started.
24-08-29.16:47:23.192 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290777254","timeStamp":"2024-08-29 16:44:47.022"}
24-08-29.16:47:23.199 [main            ] INFO  AwardServiceTest       - Started AwardServiceTest in 13.489 seconds (JVM running for 14.64)
24-08-29.16:47:23.496 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907838173
24-08-29.16:47:23.499 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290783817
24-08-29.16:47:24.570 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:47:24.570 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:47:24.570 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907838173, 101, OpenAI 增加使用次数, 2024-08-29 16:47:23.497, create, 1035958042195636224]
24-08-29.16:47:24.904 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:47:24.904 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:47:24.904 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290783817","timeStamp":"2024-08-29 16:47:23.499"}, 18290783817, create, 1035958044150181889]
24-08-29.16:47:25.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:47:25.083 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:47:25.163 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) limit 10;;
24-08-29.16:47:25.163 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@6ce53649], lock=Optional.empty, window=Optional.empty)
24-08-29.16:47:25.163 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:47:25.163 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:47:25.473 [pool-7-thread-2 ] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290783817","timeStamp":"2024-08-29 16:47:23.499"}
24-08-29.16:47:25.484 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:47:25.484 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:47:25.484 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290783817]
24-08-29.16:47:25.484 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290783817]
24-08-29.16:47:25.522 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290783817","timeStamp":"2024-08-29 16:47:23.499"}
24-08-29.16:47:25.938 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907839197
24-08-29.16:47:25.938 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290783919
24-08-29.16:47:25.940 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:47:25.940 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:47:25.940 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907839197, 101, OpenAI 增加使用次数, 2024-08-29 16:47:25.938, create, 1035958048533229568]
24-08-29.16:47:26.090 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:47:26.090 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:47:26.090 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290783919","timeStamp":"2024-08-29 16:47:25.938"}, 18290783919, create, 1035958049158180865]
24-08-29.16:47:26.511 [pool-7-thread-3 ] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290783919","timeStamp":"2024-08-29 16:47:25.938"}
24-08-29.16:47:26.511 [pool-7-thread-3 ] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:47:26.511 [pool-7-thread-3 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:47:26.511 [pool-7-thread-3 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290783919]
24-08-29.16:47:26.511 [pool-7-thread-3 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290783919]
24-08-29.16:47:26.613 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290783919","timeStamp":"2024-08-29 16:47:25.938"}
24-08-29.16:47:27.011 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907839647
24-08-29.16:47:27.011 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290783964
24-08-29.16:47:27.013 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:47:27.013 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:47:27.013 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907839647, 101, OpenAI 增加使用次数, 2024-08-29 16:47:27.011, create, 1035958053029523456]
24-08-29.16:47:27.170 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:47:27.170 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:47:27.170 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290783964","timeStamp":"2024-08-29 16:47:27.011"}, 18290783964, create, 1035958053692223489]
24-08-29.16:47:27.567 [pool-7-thread-4 ] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290783964","timeStamp":"2024-08-29 16:47:27.011"}
24-08-29.16:47:27.568 [pool-7-thread-4 ] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:47:27.568 [pool-7-thread-4 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:47:27.568 [pool-7-thread-4 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290783964]
24-08-29.16:47:27.568 [pool-7-thread-4 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290783964]
24-08-29.16:47:27.612 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290783964","timeStamp":"2024-08-29 16:47:27.011"}
24-08-29.16:47:28.083 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907840097
24-08-29.16:47:28.083 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290784009
24-08-29.16:47:28.084 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:47:28.084 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:47:28.084 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907840097, 101, OpenAI 增加使用次数, 2024-08-29 16:47:28.083, create, 1035958057521623040]
24-08-29.16:47:28.357 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:47:28.357 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:47:28.357 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290784009","timeStamp":"2024-08-29 16:47:28.083"}, 18290784009, create, 1035958058666668033]
24-08-29.16:47:28.826 [pool-7-thread-5 ] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290784009","timeStamp":"2024-08-29 16:47:28.083"}
24-08-29.16:47:28.827 [pool-7-thread-5 ] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:47:28.827 [pool-7-thread-5 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:47:28.827 [pool-7-thread-5 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290784009]
24-08-29.16:47:28.827 [pool-7-thread-5 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290784009]
24-08-29.16:47:28.869 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290784009","timeStamp":"2024-08-29 16:47:28.083"}
24-08-29.16:47:29.332 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907840621
24-08-29.16:47:29.332 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290784062
24-08-29.16:47:29.334 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:47:29.334 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:47:29.334 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907840621, 101, OpenAI 增加使用次数, 2024-08-29 16:47:29.332, create, 1035958062764503040]
24-08-29.16:47:29.554 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:47:29.554 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:47:29.554 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290784062","timeStamp":"2024-08-29 16:47:29.332"}, 18290784062, create, 1035958063691444225]
24-08-29.16:47:29.979 [pool-7-thread-6 ] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290784062","timeStamp":"2024-08-29 16:47:29.332"}
24-08-29.16:47:29.980 [pool-7-thread-6 ] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:47:29.980 [pool-7-thread-6 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:47:29.980 [pool-7-thread-6 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290784062]
24-08-29.16:47:29.980 [pool-7-thread-6 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290784062]
24-08-29.16:47:30.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:47:30.020 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290784062","timeStamp":"2024-08-29 16:47:29.332"}
24-08-29.16:47:30.036 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:47:30.111 [pool-7-thread-7 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) limit 10;;
24-08-29.16:47:30.111 [pool-7-thread-7 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@6ce53649], lock=Optional.empty, window=Optional.empty)
24-08-29.16:47:30.111 [pool-7-thread-7 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:47:30.111 [pool-7-thread-7 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:47:30.486 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907841104
24-08-29.16:47:30.486 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290784110
24-08-29.16:47:30.487 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:47:30.487 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:47:30.487 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907841104, 101, OpenAI 增加使用次数, 2024-08-29 16:47:30.486, create, 1035958067604729856]
24-08-29.16:47:30.633 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:47:30.633 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:47:30.633 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290784110","timeStamp":"2024-08-29 16:47:30.486"}, 18290784110, create, 1035958068217098241]
24-08-29.16:47:31.065 [pool-7-thread-8 ] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290784110","timeStamp":"2024-08-29 16:47:30.486"}
24-08-29.16:47:31.066 [pool-7-thread-8 ] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:47:31.066 [pool-7-thread-8 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:47:31.066 [pool-7-thread-8 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290784110]
24-08-29.16:47:31.066 [pool-7-thread-8 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290784110]
24-08-29.16:47:31.114 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290784110","timeStamp":"2024-08-29 16:47:30.486"}
24-08-29.16:47:31.571 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907841560
24-08-29.16:47:31.571 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290784156
24-08-29.16:47:31.573 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:47:31.573 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:47:31.573 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907841560, 101, OpenAI 增加使用次数, 2024-08-29 16:47:31.571, create, 1035958072159744000]
24-08-29.16:47:31.887 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:47:31.887 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:47:31.887 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290784156","timeStamp":"2024-08-29 16:47:31.572"}, 18290784156, create, 1035958073476755457]
24-08-29.16:47:32.271 [pool-7-thread-9 ] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290784156","timeStamp":"2024-08-29 16:47:31.572"}
24-08-29.16:47:32.272 [pool-7-thread-9 ] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:47:32.272 [pool-7-thread-9 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:47:32.272 [pool-7-thread-9 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290784156]
24-08-29.16:47:32.272 [pool-7-thread-9 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290784156]
24-08-29.16:47:32.346 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290784156","timeStamp":"2024-08-29 16:47:31.572"}
24-08-29.16:47:32.780 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907842067
24-08-29.16:47:32.780 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290784206
24-08-29.16:47:32.782 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:47:32.782 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:47:32.782 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907842067, 101, OpenAI 增加使用次数, 2024-08-29 16:47:32.78, create, 1035958077230657536]
24-08-29.16:47:32.993 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:47:32.995 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:47:32.995 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290784206","timeStamp":"2024-08-29 16:47:32.78"}, 18290784206, create, 1035958078115655681]
24-08-29.16:47:33.366 [pool-7-thread-10] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290784206","timeStamp":"2024-08-29 16:47:32.78"}
24-08-29.16:47:33.368 [pool-7-thread-10] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:47:33.368 [pool-7-thread-10] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:47:33.368 [pool-7-thread-10] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290784206]
24-08-29.16:47:33.368 [pool-7-thread-10] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290784206]
24-08-29.16:47:33.410 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290784206","timeStamp":"2024-08-29 16:47:32.78"}
24-08-29.16:47:33.870 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907842524
24-08-29.16:47:33.870 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290784252
24-08-29.16:47:33.872 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:47:33.872 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:47:33.872 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907842524, 101, OpenAI 增加使用次数, 2024-08-29 16:47:33.87, create, 1035958081798254592]
24-08-29.16:47:34.090 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:47:34.090 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:47:34.090 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290784252","timeStamp":"2024-08-29 16:47:33.87"}, 18290784252, create, 1035958082712612865]
24-08-29.16:47:34.462 [pool-7-thread-11] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290784252","timeStamp":"2024-08-29 16:47:33.87"}
24-08-29.16:47:34.462 [pool-7-thread-11] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:47:34.462 [pool-7-thread-11] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:47:34.462 [pool-7-thread-11] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290784252]
24-08-29.16:47:34.462 [pool-7-thread-11] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290784252]
24-08-29.16:47:34.503 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290784252","timeStamp":"2024-08-29 16:47:33.87"}
24-08-29.16:47:34.969 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907842985
24-08-29.16:47:34.969 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290784298
24-08-29.16:47:34.970 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:47:34.970 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:47:34.970 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907842985, 101, OpenAI 增加使用次数, 2024-08-29 16:47:34.969, create, 1035958086403600384]
24-08-29.16:47:35.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:47:35.002 [pool-7-thread-12] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) limit 10;;
24-08-29.16:47:35.002 [pool-7-thread-12] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@6ce53649], lock=Optional.empty, window=Optional.empty)
24-08-29.16:47:35.002 [pool-7-thread-12] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:47:35.002 [pool-7-thread-12] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:47:35.041 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:47:35.127 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:47:35.127 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:47:35.127 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290784298","timeStamp":"2024-08-29 16:47:34.969"}, 18290784298, create, 1035958087062106113]
24-08-29.16:47:35.462 [pool-7-thread-13] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290784298","timeStamp":"2024-08-29 16:47:34.969"}
24-08-29.16:47:35.463 [pool-7-thread-13] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:47:35.463 [pool-7-thread-13] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:47:35.463 [pool-7-thread-13] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290784298]
24-08-29.16:47:35.463 [pool-7-thread-13] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290784298]
24-08-29.16:47:35.544 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290784298","timeStamp":"2024-08-29 16:47:34.969"}
24-08-29.16:47:35.813 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] INFO  SimpleMessageListenerContainer - Waiting for workers to finish.
24-08-29.16:47:35.902 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] INFO  SimpleMessageListenerContainer - Waiting for workers to finish.
24-08-29.16:47:35.902 [SpringApplicationShutdownHook] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
24-08-29.16:47:35.962 [main            ] INFO  SnowflakeUUIDUtils     - 12位数字的UUID:182907843402
24-08-29.16:47:35.962 [main            ] INFO  SnowflakeUUIDUtils     - 11位数字的UUID:18290784340
24-08-29.16:47:35.963 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into user_award_record(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state) values(?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?,
                                ?);
24-08-29.16:47:35.963 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:47:35.963 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: insert into user_award_record_0(user_id,
            activity_id,
            strategy_id,
            order_id,
            award_id,
            award_title,
            award_time,
            award_state, id) values(?, ?, ?, ?, ?, ?, ?, ?, ?); ::: [lyt, 100301, 100006, 182907843402, 101, OpenAI 增加使用次数, 2024-08-29 16:47:35.962, create, 1035958090572738560]
24-08-29.16:47:36.021 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] INFO  SimpleMessageListenerContainer - Successfully waited for workers to finish.
24-08-29.16:47:36.103 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        ) values (?,
                 ?,
                 ?,
                 ?,
                 ?);
24-08-29.16:47:36.104 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLInsertStatement(setAssignment=Optional.empty, onDuplicateKeyColumns=Optional.empty)
24-08-29.16:47:36.104 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: insert into task(
            topic,
            user_id,
            message,
            message_id,
            state
        , id) values (?, ?, ?, ?, ?, ?); ::: [send_award, lyt, {"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290784340","timeStamp":"2024-08-29 16:47:35.962"}, 18290784340, create, 1035958091159941121]
24-08-29.16:47:36.548 [pool-7-thread-14] INFO  EventPublisher         - 发送 MQ 消息 topic:send_award, message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290784340","timeStamp":"2024-08-29 16:47:35.962"}
24-08-29.16:47:36.550 [pool-7-thread-14] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:47:36.550 [pool-7-thread-14] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:47:36.550 [pool-7-thread-14] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290784340]
24-08-29.16:47:36.550 [pool-7-thread-14] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'completed', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290784340]
24-08-29.16:47:36.552 [pool-7-thread-14] ERROR AwardRepository        - 写入中奖记录，发送MQ消息失败 userId:lyt topic:send_award
24-08-29.16:47:36.554 [pool-7-thread-14] INFO  ShardingSphere-SQL     - Logic SQL: update task set state = 'fail', update_time = now()
        where user_id = ? and message_id = ?;
24-08-29.16:47:36.554 [pool-7-thread-14] INFO  ShardingSphere-SQL     - SQLStatement: MySQLUpdateStatement(orderBy=Optional.empty, limit=Optional.empty)
24-08-29.16:47:36.554 [pool-7-thread-14] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: update task set state = 'fail', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290784340]
24-08-29.16:47:36.554 [pool-7-thread-14] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: update task set state = 'fail', update_time = now()
        where user_id = ? and message_id = ?; ::: [lyt, 18290784340]
24-08-29.16:47:36.598 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] INFO  SimpleMessageListenerContainer - Successfully waited for workers to finish.
24-08-29.16:47:36.600 [SpringApplicationShutdownHook] INFO  SchedulerFactoryBean   - Shutting down Quartz Scheduler
24-08-29.16:47:36.600 [SpringApplicationShutdownHook] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
24-08-29.16:47:36.600 [SpringApplicationShutdownHook] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
24-08-29.16:47:36.600 [SpringApplicationShutdownHook] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
24-08-29.16:47:36.602 [SpringApplicationShutdownHook] INFO  SimpleMessageListenerContainer - Shutdown ignored - container is already stopped
24-08-29.16:47:36.603 [SpringApplicationShutdownHook] INFO  SimpleMessageListenerContainer - Shutdown ignored - container is already stopped
24-08-29.16:47:36.726 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-08-29.16:47:36.733 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-08-29.16:47:36.733 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-2 - Shutdown initiated...
24-08-29.16:47:36.739 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-2 - Shutdown completed.
24-08-29.16:47:41.055 [main            ] INFO  RaffleActivityPartakeServiceTest - Starting RaffleActivityPartakeServiceTest using Java 1.8.0_171 on LAPTOP-6UTBSJGB with PID 29092 (started by 27132 in C:\Users\27132\Java\big-market\big-market-app)
24-08-29.16:47:41.056 [main            ] INFO  RaffleActivityPartakeServiceTest - The following 1 profile is active: "dev"
24-08-29.16:47:42.574 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-08-29.16:47:42.580 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-08-29.16:47:42.655 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 53 ms. Found 0 Redis repository interfaces.
24-08-29.16:47:43.170 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'stringToNoneShardingStrategyConfigurationConverter' of type [org.apache.shardingsphere.spring.boot.converter.StringToNoneShardingStrategyConfigurationConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-08-29.16:47:43.186 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.shardingsphere-org.apache.shardingsphere.spring.boot.prop.SpringBootPropertiesConfiguration' of type [org.apache.shardingsphere.spring.boot.prop.SpringBootPropertiesConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-08-29.16:47:43.445 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.apache.shardingsphere.spring.boot.ShardingSphereAutoConfiguration' of type [org.apache.shardingsphere.spring.boot.ShardingSphereAutoConfiguration$$EnhancerBySpringCGLIB$$d31f7ea6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-08-29.16:47:44.576 [main            ] INFO  Version                - Redisson 3.23.4
24-08-29.16:47:45.259 [redisson-netty-2-6] INFO  MasterPubSubConnectionPool - 1 connections initialized for 8.138.41.137/8.138.41.137:16379
24-08-29.16:47:45.600 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 8.138.41.137/8.138.41.137:16379
24-08-29.16:47:46.007 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-08-29.16:47:47.473 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-08-29.16:47:47.488 [main            ] INFO  HikariDataSource       - HikariPool-2 - Starting...
24-08-29.16:47:48.172 [main            ] INFO  HikariDataSource       - HikariPool-2 - Start completed.
24-08-29.16:47:52.559 [main            ] INFO  StdSchedulerFactory    - Using default implementation for ThreadExecutor
24-08-29.16:47:52.573 [main            ] INFO  SchedulerSignalerImpl  - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
24-08-29.16:47:52.573 [main            ] INFO  QuartzScheduler        - Quartz Scheduler v.2.3.2 created.
24-08-29.16:47:52.574 [main            ] INFO  RAMJobStore            - RAMJobStore initialized.
24-08-29.16:47:52.575 [main            ] INFO  QuartzScheduler        - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

24-08-29.16:47:52.575 [main            ] INFO  StdSchedulerFactory    - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
24-08-29.16:47:52.575 [main            ] INFO  StdSchedulerFactory    - Quartz scheduler version: 2.3.2
24-08-29.16:47:52.575 [main            ] INFO  QuartzScheduler        - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@1c04dae9
24-08-29.16:47:52.725 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-08-29.16:47:52.839 [main            ] INFO  CachingConnectionFactory - Attempting to connect to: [8.138.41.137:5672]
24-08-29.16:47:53.086 [main            ] INFO  CachingConnectionFactory - Created new connection: rabbitConnectionFactory#6645c1f:0/SimpleConnection@3bc57af4 [delegate=amqp://admin@8.138.41.137:5672/, localPort= 56364]
24-08-29.16:47:53.793 [main            ] INFO  SchedulerFactoryBean   - Starting Quartz Scheduler now
24-08-29.16:47:53.793 [main            ] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED started.
24-08-29.16:47:53.805 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:send_award message:{"data":{"awardId":101,"awardTitle":"OpenAI 增加使用次数","userId":"lyt"},"id":"18290784340","timeStamp":"2024-08-29 16:47:35.962"}
24-08-29.16:47:53.810 [main            ] INFO  RaffleActivityPartakeServiceTest - Started RaffleActivityPartakeServiceTest in 13.216 seconds (JVM running for 14.335)
24-08-29.16:47:55.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:47:55.086 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:47:55.129 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: select activity_name,
               strategy_id,
               order_id,
               order_time,
               order_state
        from user_raffle_order where activity_id = ? and user_id = ? and order_state = 'create'
24-08-29.16:47:55.129 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) limit 10;;
24-08-29.16:47:55.129 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional.empty, lock=Optional.empty, window=Optional.empty)
24-08-29.16:47:55.130 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select activity_name,
               strategy_id,
               order_id,
               order_time,
               order_state
        from user_raffle_order_0 where activity_id = ? and user_id = ? and order_state = 'create' ::: [101, lyt]
24-08-29.16:47:55.129 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@d4bbd1b], lock=Optional.empty, window=Optional.empty)
24-08-29.16:47:55.130 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:47:55.130 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:47:55.426 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] INFO  SimpleMessageListenerContainer - Waiting for workers to finish.
24-08-29.16:47:55.477 [SpringApplicationShutdownHook] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
24-08-29.16:47:55.477 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] INFO  SimpleMessageListenerContainer - Waiting for workers to finish.
24-08-29.16:47:55.635 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] INFO  SimpleMessageListenerContainer - Successfully waited for workers to finish.
24-08-29.16:47:55.870 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] INFO  SimpleMessageListenerContainer - Successfully waited for workers to finish.
24-08-29.16:47:55.872 [SpringApplicationShutdownHook] INFO  SchedulerFactoryBean   - Shutting down Quartz Scheduler
24-08-29.16:47:55.872 [SpringApplicationShutdownHook] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
24-08-29.16:47:55.872 [SpringApplicationShutdownHook] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
24-08-29.16:47:55.872 [SpringApplicationShutdownHook] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
24-08-29.16:47:55.874 [SpringApplicationShutdownHook] INFO  SimpleMessageListenerContainer - Shutdown ignored - container is already stopped
24-08-29.16:47:55.875 [SpringApplicationShutdownHook] INFO  SimpleMessageListenerContainer - Shutdown ignored - container is already stopped
24-08-29.16:47:55.925 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-08-29.16:47:55.934 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-08-29.16:47:55.934 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-2 - Shutdown initiated...
24-08-29.16:47:55.940 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-2 - Shutdown completed.
24-08-29.16:48:15.057 [main            ] INFO  RaffleActivityPartakeServiceTest - Starting RaffleActivityPartakeServiceTest using Java 1.8.0_171 on LAPTOP-6UTBSJGB with PID 21976 (started by 27132 in C:\Users\27132\Java\big-market\big-market-app)
24-08-29.16:48:15.058 [main            ] INFO  RaffleActivityPartakeServiceTest - The following 1 profile is active: "dev"
24-08-29.16:48:16.640 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-08-29.16:48:16.648 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-08-29.16:48:16.725 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 52 ms. Found 0 Redis repository interfaces.
24-08-29.16:48:17.262 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'stringToNoneShardingStrategyConfigurationConverter' of type [org.apache.shardingsphere.spring.boot.converter.StringToNoneShardingStrategyConfigurationConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-08-29.16:48:17.278 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.shardingsphere-org.apache.shardingsphere.spring.boot.prop.SpringBootPropertiesConfiguration' of type [org.apache.shardingsphere.spring.boot.prop.SpringBootPropertiesConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-08-29.16:48:17.536 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.apache.shardingsphere.spring.boot.ShardingSphereAutoConfiguration' of type [org.apache.shardingsphere.spring.boot.ShardingSphereAutoConfiguration$$EnhancerBySpringCGLIB$$e1598428] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-08-29.16:48:18.769 [main            ] INFO  Version                - Redisson 3.23.4
24-08-29.16:48:19.413 [redisson-netty-2-6] INFO  MasterPubSubConnectionPool - 1 connections initialized for 8.138.41.137/8.138.41.137:16379
24-08-29.16:48:19.886 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 8.138.41.137/8.138.41.137:16379
24-08-29.16:48:20.271 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-08-29.16:48:21.623 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-08-29.16:48:21.637 [main            ] INFO  HikariDataSource       - HikariPool-2 - Starting...
24-08-29.16:48:22.261 [main            ] INFO  HikariDataSource       - HikariPool-2 - Start completed.
24-08-29.16:48:26.951 [main            ] INFO  StdSchedulerFactory    - Using default implementation for ThreadExecutor
24-08-29.16:48:26.965 [main            ] INFO  SchedulerSignalerImpl  - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
24-08-29.16:48:26.966 [main            ] INFO  QuartzScheduler        - Quartz Scheduler v.2.3.2 created.
24-08-29.16:48:26.966 [main            ] INFO  RAMJobStore            - RAMJobStore initialized.
24-08-29.16:48:26.967 [main            ] INFO  QuartzScheduler        - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

24-08-29.16:48:26.967 [main            ] INFO  StdSchedulerFactory    - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
24-08-29.16:48:26.967 [main            ] INFO  StdSchedulerFactory    - Quartz scheduler version: 2.3.2
24-08-29.16:48:26.967 [main            ] INFO  QuartzScheduler        - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@75564689
24-08-29.16:48:27.116 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-08-29.16:48:27.233 [main            ] INFO  CachingConnectionFactory - Attempting to connect to: [8.138.41.137:5672]
24-08-29.16:48:27.568 [main            ] INFO  CachingConnectionFactory - Created new connection: rabbitConnectionFactory#75bbeb89:0/SimpleConnection@30628ef9 [delegate=amqp://admin@8.138.41.137:5672/, localPort= 56464]
24-08-29.16:48:28.238 [main            ] INFO  SchedulerFactoryBean   - Starting Quartz Scheduler now
24-08-29.16:48:28.238 [main            ] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED started.
24-08-29.16:48:28.256 [main            ] INFO  RaffleActivityPartakeServiceTest - Started RaffleActivityPartakeServiceTest in 13.662 seconds (JVM running for 14.736)
24-08-29.16:48:29.535 [main            ] INFO  ShardingSphere-SQL     - Logic SQL: select activity_name,
               strategy_id,
               order_id,
               order_time,
               order_state
        from user_raffle_order where activity_id = ? and user_id = ? and order_state = 'create'
24-08-29.16:48:29.535 [main            ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional.empty, lock=Optional.empty, window=Optional.empty)
24-08-29.16:48:29.535 [main            ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select activity_name,
               strategy_id,
               order_id,
               order_time,
               order_state
        from user_raffle_order_0 where activity_id = ? and user_id = ? and order_state = 'create' ::: [101, lyt]
24-08-29.16:48:33.397 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:48:33.471 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:48:33.628 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) limit 10;;
24-08-29.16:48:33.628 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@74708654], lock=Optional.empty, window=Optional.empty)
24-08-29.16:48:33.628 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:48:33.628 [pool-7-thread-1 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:48:34.347 [main            ] INFO  AbstractRaffleActivityPartake - 创建参与活动【已存在未消费】userId:lyt activityId:101 userRaffleEntity:{"activityName":"测试","orderId":"182735359748","orderState":"create","orderTime":"2024-08-24 22:33:41","strategyId":100004,"userId":"lyt"}
24-08-29.16:48:38.920 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:48:39.419 [main            ] INFO  RaffleActivityPartakeServiceTest - 请求参数：{"activityId":101,"userId":"lyt"}
24-08-29.16:48:40.272 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:48:40.272 [main            ] INFO  RaffleActivityPartakeServiceTest - 测试结果：{"activityName":"测试","orderId":"182735359748","orderState":"create","orderTime":"2024-08-24 22:33:41","strategyId":100004,"userId":"lyt"}
24-08-29.16:48:40.779 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) limit 10;;
24-08-29.16:48:40.779 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@74708654], lock=Optional.empty, window=Optional.empty)
24-08-29.16:48:40.779 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:48:40.779 [pool-7-thread-2 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:48:45.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:48:45.048 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:48:45.099 [pool-7-thread-3 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) limit 10;;
24-08-29.16:48:45.099 [pool-7-thread-3 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@74708654], lock=Optional.empty, window=Optional.empty)
24-08-29.16:48:45.099 [pool-7-thread-3 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:48:45.099 [pool-7-thread-3 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:48:50.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:48:50.015 [pool-7-thread-4 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) limit 10;;
24-08-29.16:48:50.015 [pool-7-thread-4 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@74708654], lock=Optional.empty, window=Optional.empty)
24-08-29.16:48:50.015 [pool-7-thread-4 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:48:50.015 [pool-7-thread-4 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:48:50.067 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:48:55.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:48:55.053 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:48:55.055 [pool-7-thread-5 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) limit 10;;
24-08-29.16:48:55.056 [pool-7-thread-5 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@74708654], lock=Optional.empty, window=Optional.empty)
24-08-29.16:48:55.056 [pool-7-thread-5 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:48:55.056 [pool-7-thread-5 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:49:00.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:49:00.060 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:49:00.095 [pool-7-thread-6 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) limit 10;;
24-08-29.16:49:00.095 [pool-7-thread-6 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@74708654], lock=Optional.empty, window=Optional.empty)
24-08-29.16:49:00.095 [pool-7-thread-6 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:49:00.095 [pool-7-thread-6 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:49:05.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:49:05.064 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:49:05.105 [pool-7-thread-7 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) limit 10;;
24-08-29.16:49:05.105 [pool-7-thread-7 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@74708654], lock=Optional.empty, window=Optional.empty)
24-08-29.16:49:05.106 [pool-7-thread-7 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:49:05.106 [pool-7-thread-7 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:49:10.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:49:10.080 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:49:10.141 [pool-7-thread-8 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) limit 10;;
24-08-29.16:49:10.141 [pool-7-thread-8 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@74708654], lock=Optional.empty, window=Optional.empty)
24-08-29.16:49:10.141 [pool-7-thread-8 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:49:10.141 [pool-7-thread-8 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:49:15.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:49:15.067 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:49:15.068 [pool-7-thread-9 ] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) limit 10;;
24-08-29.16:49:15.068 [pool-7-thread-9 ] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@74708654], lock=Optional.empty, window=Optional.empty)
24-08-29.16:49:15.069 [pool-7-thread-9 ] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:49:15.069 [pool-7-thread-9 ] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:49:20.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:49:20.071 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:49:20.133 [pool-7-thread-10] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) limit 10;;
24-08-29.16:49:20.133 [pool-7-thread-10] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@74708654], lock=Optional.empty, window=Optional.empty)
24-08-29.16:49:20.133 [pool-7-thread-10] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:49:20.133 [pool-7-thread-10] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:49:25.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:49:25.015 [pool-7-thread-11] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) limit 10;;
24-08-29.16:49:25.015 [pool-7-thread-11] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@74708654], lock=Optional.empty, window=Optional.empty)
24-08-29.16:49:25.015 [pool-7-thread-11] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:49:25.015 [pool-7-thread-11] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:49:25.060 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:49:29.825 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] INFO  SimpleMessageListenerContainer - Waiting for workers to finish.
24-08-29.16:49:29.864 [SpringApplicationShutdownHook] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
24-08-29.16:49:29.864 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] INFO  SimpleMessageListenerContainer - Waiting for workers to finish.
24-08-29.16:49:30.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:49:30.053 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-29.16:49:30.054 [pool-7-thread-12] INFO  ShardingSphere-SQL     - Logic SQL: select topic,
               user_id,
               message,
               message_id
        from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) limit 10;;
24-08-29.16:49:30.055 [pool-7-thread-12] INFO  ShardingSphere-SQL     - SQLStatement: MySQLSelectStatement(limit=Optional[org.apache.shardingsphere.sql.parser.sql.common.segment.dml.pagination.limit.LimitSegment@74708654], lock=Optional.empty, window=Optional.empty)
24-08-29.16:49:30.055 [pool-7-thread-12] INFO  ShardingSphere-SQL     - Actual SQL: ds0 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:49:30.055 [pool-7-thread-12] INFO  ShardingSphere-SQL     - Actual SQL: ds1 ::: select topic,
               user_id,
               message,
               message_id
, id AS ORDER_BY_DERIVED_0         from task where state = 'fail' or(state = 'create' and now() - update_time > 60000000000000) ORDER BY id ASC  limit 10;;
24-08-29.16:49:30.778 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] INFO  SimpleMessageListenerContainer - Successfully waited for workers to finish.
24-08-29.16:49:30.777 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] INFO  SimpleMessageListenerContainer - Successfully waited for workers to finish.
24-08-29.16:49:30.781 [SpringApplicationShutdownHook] INFO  SchedulerFactoryBean   - Shutting down Quartz Scheduler
24-08-29.16:49:30.781 [SpringApplicationShutdownHook] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
24-08-29.16:49:30.781 [SpringApplicationShutdownHook] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
24-08-29.16:49:30.782 [SpringApplicationShutdownHook] INFO  QuartzScheduler        - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
24-08-29.16:49:30.783 [SpringApplicationShutdownHook] INFO  SimpleMessageListenerContainer - Shutdown ignored - container is already stopped
24-08-29.16:49:30.784 [SpringApplicationShutdownHook] INFO  SimpleMessageListenerContainer - Shutdown ignored - container is already stopped
24-08-29.16:49:30.855 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-08-29.16:49:30.865 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-08-29.16:49:30.866 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-2 - Shutdown initiated...
24-08-29.16:49:30.873 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-2 - Shutdown completed.
